#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UmlGraph version 4.1 (http://www.spinellis.gr/sw/umlgraph)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	// MyVector<E, P>
	c86 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p"><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td> MyVector&lt;E, P&gt; </td></tr></table></td></tr><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td align="left">  </td></tr></table></td></tr><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td align="left"> ~ addAll(index : int, c : Collection&lt;E&gt;) : boolean </td></tr><tr><td align="left"> ~ foo(x : MyVector&lt;P, MyVector&lt;E, E&gt;&gt;) : MyVector&lt;E, P&gt; </td></tr><tr><td align="left"> ~ removeAll(c : Collection&lt;?&gt;) : boolean </td></tr><tr><td align="left"> ~ set(index : int, element : E) : E </td></tr></table></td></tr></table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//MyVector<E, P> extends java.util.Vector<E>
	c87:p -> c86:p [dir=back,arrowtail=empty];
	//MyVector<E, P> implements java.util.List<E>
	c88:p -> c86:p [dir=back,arrowtail=empty,style=dashed];
	//MyVector<E, P> implements java.util.RandomAccess
	c89:p -> c86:p [dir=back,arrowtail=empty,style=dashed];
	//MyVector<E, P> implements java.lang.Cloneable
	c90:p -> c86:p [dir=back,arrowtail=empty,style=dashed];
	// java.lang.Cloneable
	c90 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/Cloneable.html"><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td> &laquo;interface&raquo; </td></tr><tr><td> Cloneable </td></tr></table></td></tr></table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// java.util.List<E>
	c88 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/util/List.html"><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td> &laquo;interface&raquo; </td></tr><tr><td> List&lt;E&gt; </td></tr></table></td></tr><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td align="left">  </td></tr></table></td></tr><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td align="left"> + size() : int </td></tr><tr><td align="left"> + isEmpty() : boolean </td></tr><tr><td align="left"> + contains(arg0 : Object) : boolean </td></tr><tr><td align="left"> + iterator() : Iterator&lt;E&gt; </td></tr><tr><td align="left"> + toArray() : Object[] </td></tr><tr><td align="left"> + toArray(arg0 : T[]) : T[] </td></tr><tr><td align="left"> + add(arg0 : E) : boolean </td></tr><tr><td align="left"> + remove(arg0 : Object) : boolean </td></tr><tr><td align="left"> + containsAll(arg0 : Collection&lt;?&gt;) : boolean </td></tr><tr><td align="left"> + addAll(arg0 : Collection&lt;?&gt;) : boolean </td></tr><tr><td align="left"> + addAll(arg0 : int, arg1 : Collection&lt;?&gt;) : boolean </td></tr><tr><td align="left"> + removeAll(arg0 : Collection&lt;?&gt;) : boolean </td></tr><tr><td align="left"> + retainAll(arg0 : Collection&lt;?&gt;) : boolean </td></tr><tr><td align="left"> + clear() </td></tr><tr><td align="left"> + equals(arg0 : Object) : boolean </td></tr><tr><td align="left"> + hashCode() : int </td></tr><tr><td align="left"> + get(arg0 : int) : E </td></tr><tr><td align="left"> + set(arg0 : int, arg1 : E) : E </td></tr><tr><td align="left"> + add(arg0 : int, arg1 : E) </td></tr><tr><td align="left"> + remove(arg0 : int) : E </td></tr><tr><td align="left"> + indexOf(arg0 : Object) : int </td></tr><tr><td align="left"> + lastIndexOf(arg0 : Object) : int </td></tr><tr><td align="left"> + listIterator() : ListIterator&lt;E&gt; </td></tr><tr><td align="left"> + listIterator(arg0 : int) : ListIterator&lt;E&gt; </td></tr><tr><td align="left"> + subList(arg0 : int, arg1 : int) : List&lt;E&gt; </td></tr></table></td></tr></table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// java.util.RandomAccess
	c89 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/util/RandomAccess.html"><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td> &laquo;interface&raquo; </td></tr><tr><td> RandomAccess </td></tr></table></td></tr></table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// java.util.Vector<E>
	c87 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/util/Vector.html"><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td> Vector&lt;E&gt; </td></tr></table></td></tr><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td align="left"> # elementData : Object[] </td></tr><tr><td align="left"> # elementCount : int </td></tr><tr><td align="left"> # capacityIncrement : int </td></tr><tr><td align="left"> - serialVersionUID : long </td></tr></table></td></tr><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td align="left"> + copyInto(arg0 : Object[]) </td></tr><tr><td align="left"> + trimToSize() </td></tr><tr><td align="left"> + ensureCapacity(arg0 : int) </td></tr><tr><td align="left"> - ensureCapacityHelper(arg0 : int) </td></tr><tr><td align="left"> + setSize(arg0 : int) </td></tr><tr><td align="left"> + capacity() : int </td></tr><tr><td align="left"> + size() : int </td></tr><tr><td align="left"> + isEmpty() : boolean </td></tr><tr><td align="left"> + elements() : Enumeration&lt;E&gt; </td></tr><tr><td align="left"> + contains(arg0 : Object) : boolean </td></tr><tr><td align="left"> + indexOf(arg0 : Object) : int </td></tr><tr><td align="left"> + indexOf(arg0 : Object, arg1 : int) : int </td></tr><tr><td align="left"> + lastIndexOf(arg0 : Object) : int </td></tr><tr><td align="left"> + lastIndexOf(arg0 : Object, arg1 : int) : int </td></tr><tr><td align="left"> + elementAt(arg0 : int) : E </td></tr><tr><td align="left"> + firstElement() : E </td></tr><tr><td align="left"> + lastElement() : E </td></tr><tr><td align="left"> + setElementAt(arg0 : E, arg1 : int) </td></tr><tr><td align="left"> + removeElementAt(arg0 : int) </td></tr><tr><td align="left"> + insertElementAt(arg0 : E, arg1 : int) </td></tr><tr><td align="left"> + addElement(arg0 : E) </td></tr><tr><td align="left"> + removeElement(arg0 : Object) : boolean </td></tr><tr><td align="left"> + removeAllElements() </td></tr><tr><td align="left"> + clone() : Object </td></tr><tr><td align="left"> + toArray() : Object[] </td></tr><tr><td align="left"> + toArray(arg0 : T[]) : T[] </td></tr><tr><td align="left"> + get(arg0 : int) : E </td></tr><tr><td align="left"> + set(arg0 : int, arg1 : E) : E </td></tr><tr><td align="left"> + add(arg0 : E) : boolean </td></tr><tr><td align="left"> + remove(arg0 : Object) : boolean </td></tr><tr><td align="left"> + add(arg0 : int, arg1 : E) </td></tr><tr><td align="left"> + remove(arg0 : int) : E </td></tr><tr><td align="left"> + clear() </td></tr><tr><td align="left"> + containsAll(arg0 : Collection&lt;?&gt;) : boolean </td></tr><tr><td align="left"> + addAll(arg0 : Collection&lt;?&gt;) : boolean </td></tr><tr><td align="left"> + removeAll(arg0 : Collection&lt;?&gt;) : boolean </td></tr><tr><td align="left"> + retainAll(arg0 : Collection&lt;?&gt;) : boolean </td></tr><tr><td align="left"> + addAll(arg0 : int, arg1 : Collection&lt;?&gt;) : boolean </td></tr><tr><td align="left"> + equals(arg0 : Object) : boolean </td></tr><tr><td align="left"> + hashCode() : int </td></tr><tr><td align="left"> + toString() : String </td></tr><tr><td align="left"> + subList(arg0 : int, arg1 : int) : List&lt;E&gt; </td></tr><tr><td align="left"> # removeRange(arg0 : int, arg1 : int) </td></tr><tr><td align="left"> - writeObject(arg0 : ObjectOutputStream) </td></tr></table></td></tr></table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

