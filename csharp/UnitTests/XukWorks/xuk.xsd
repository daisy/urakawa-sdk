<?xml version="1.0" encoding="UTF-8"?>
<xs:schema 
 xmlns:xs="http://www.w3.org/2001/XMLSchema" 
 elementFormDefault="qualified" 
 targetNamespace="http://www.daisy.org/urakawa/xuk/0.5"
 xmlns="http://www.daisy.org/urakawa/xuk/0.5">
	<xs:element name="XUK">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="ProjectMetadata" minOccurs="0"/>
				<xs:element ref="Presentation"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="Presentation">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="mChannelsManager"/>
				<xs:element ref="mRootNode"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="mChannelsManager">
		<xs:complexType>
			<xs:choice>
				<xs:element ref="ChannelsManager"/>
				<xs:any namespace="##other" processContents="lax" />
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:element name="mRootNode">	
		<xs:complexType>
			<xs:sequence>
				<xs:choice>
					<xs:element ref="CoreNode"/>
					<xs:any namespace="##other"/>
				</xs:choice>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="CoreNode">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="mProperties"/>
				<xs:element ref="mChildren"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="mChildren">
		<xs:complexType>
			<xs:sequence>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:element ref="CoreNode"/>
				<xs:any namespace="##other" processContents="lax" />
				</xs:choice>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="mProperties">
		<xs:complexType>
			<xs:sequence>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:element ref="XmlProperty"/>
					<xs:element ref="ChannelsProperty"/>
					<xs:any namespace="##other" processContents="lax"/>
				</xs:choice>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="ChannelsManager">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="Channel" minOccurs="0" maxOccurs="unbounded"/>
				<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="Channel">
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:string">
					<xs:attribute name="id" type="xs:ID" use="required"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="ChannelsProperty">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="ChannelMapping" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="ChannelMapping">
		<xs:complexType>
			<xs:choice>
				<xs:element ref="AudioMedia"/>
				<xs:element ref="TextMedia"/>
				<xs:element ref="ImageMedia"/>
				<xs:element ref="VideoMedia"/>
				<xs:element ref="SequenceMedia"/>
				<xs:any namespace="##other" processContents="lax" />
			</xs:choice>
			<xs:attribute name="channel" type="xs:IDREF" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:simpleType name="timeType">
		<xs:restriction base="xs:string">
			<xs:pattern value="-?(\d+.)?(([0-1][0-9])|2[0-3]):[0-5][0-9]:[0-5][0-9](.\d\d?\d?\d?\d?\d?\d?)?"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:attributeGroup name="clippedMediaAttrGrp">
		<xs:attribute name="clipBegin" type="timeType" use="required" />
		<xs:attribute name="clipEnd" type="timeType" use="required" />
	</xs:attributeGroup>
	<xs:attributeGroup name="imageSizeAttrGrp">
		<xs:attribute name="height" type="xs:int" use="required" />
		<xs:attribute name="width" type="xs:int" use="required" />
	</xs:attributeGroup>
  <xs:element name="SrcMediaLocation">
    <xs:complexType>
      <xs:attribute name="src" type="xs:anyURI"/>
    </xs:complexType>
  </xs:element>
	<xs:element name="AudioMedia">
		<xs:complexType>
      <xs:sequence>
        <xs:element ref="SrcMediaLocation" minOccurs="1"/>
      </xs:sequence>
			<xs:attributeGroup ref="clippedMediaAttrGrp"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="TextMedia" type="xs:string"/>
	<xs:element name="ImageMedia">
		<xs:complexType>
      <xs:sequence>
        <xs:element ref="SrcMediaLocation" minOccurs="1"/>
      </xs:sequence>
      <xs:attributeGroup ref="imageSizeAttrGrp"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="VideoMedia">
		<xs:complexType>
      <xs:sequence>
        <xs:element ref="SrcMediaLocation" minOccurs="1"/>
      </xs:sequence>
      <xs:attributeGroup ref="clippedMediaAttrGrp"/>
			<xs:attributeGroup ref="imageSizeAttrGrp"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="SequenceMedia">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="AudioMedia"/>
				<xs:element ref="TextMedia"/>
				<xs:element ref="ImageMedia"/>
				<xs:element ref="VideoMedia"/>
				<xs:element ref="SequenceMedia"/>
				<xs:any namespace="##other" processContents="lax" />
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:element name="XmlProperty">
		<xs:complexType>
			<xs:sequence minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="XmlAttribute"/>
			</xs:sequence>
			<xs:attribute name="localName" type="xs:string" use="required"/>
			<xs:attribute name="namespaceUri" type="xs:string" use="optional"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="XmlAttribute">
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:string">
					<xs:attribute name="localName" type="xs:string" use="required"/>
					<xs:attribute name="namespaceUri" type="xs:string"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="ProjectMetadata">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="Metadata" minOccurs="0" maxOccurs="unbounded"/>
				<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="Metadata">
		<xs:complexType>
			<xs:attribute name="Name" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string"/>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="Content" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string"/>
				</xs:simpleType>
			</xs:attribute>
      <xs:anyAttribute namespace="##any"/>
		</xs:complexType>
	</xs:element>
</xs:schema>
