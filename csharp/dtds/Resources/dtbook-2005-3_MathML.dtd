


<!ENTITY % externalFlow " | m:math">
<!ENTITY % externalNamespaces "xmlns:m CDATA #FIXED  'http://www.w3.org/1998/Math/MathML'">



<!--=================== Imported Parameter Entity Names ===================-->

<!-- Many parameter entities come from the [XHTML11STRICT] strict DTD. -->

<!--jpritchett@rfbd.org:  2006-07-06.  Removed definition of %StyleSheet, since it is no longer needed -->


<!ENTITY % Character "CDATA" >
    <!-- a single character from [ISO10646]. -->

<!ENTITY % Charset "CDATA" >
    <!-- a character encoding, as per [RFC2045]. -->

<!ENTITY % ContentType "CDATA" >
    <!-- media type, as per [RFC2046]. -->

<!--HB: 2004-03-25 Changed reference from RFC1766 to its revison, RFC 3066. -->
<!--jpritchett@rfbd.org:  2007-12-10.  Changed again from 3066 to its revision 4646 -->

<!ENTITY % LanguageCode "NMTOKEN" >
    <!-- a language code, per [RFC4646]. -->

<!ENTITY % Number "CDATA" >
    <!-- one or more digits. -->

<!ENTITY % LinkTypes "CDATA" >
    <!-- space-separated list of link types. -->

<!ENTITY % MediaDesc "CDATA" >
    <!-- single or comma-separated list of media descriptors;
        possible values include BRAILLE, PRINT, PROJECTION, SPEECH, ALL,
        or the default SCREEN. -->

<!ENTITY % Text "CDATA" >
    <!-- used for titles etc. -->

<!ENTITY % URI "CDATA" >
    <!-- a Uniform Resource Identifier, see [RFC2396]. -->

<!--================== dtbook External Module Inclusion ===================-->

<!ENTITY % externalblock "" >
    <!-- placeholder for block element expansion from external modules;
        if changed, string in external subset begins " | blockelementname". -->

<!ENTITY % externalinline "" >
    <!-- placeholder for inline element expansion from external modules;
        if changed, string in external subset begins " | inlineelementname". -->

<!--jpritchett@rfbd.org:  2006-07-07.  Created new entity %externalFlow; for extension elements that are both block and inline -->

	<!-- placeholder for elements that can be either block or inline from 
	     external modules; if changed, string in external subset begins 
	     " | flowelementname". -->

<!--jpritchett@rfbd.org:  2006-07-07.  Created new entity %externalNamespaces; for extension namespace attributes -->

	<!-- placeholder for namespace attributes for external modules.  These 
	     attributes will be available on all elements.  If changed, string
	     in external subset is in format 
	     	"xmlns:sample   CDATA #FIXED 'http://www.sample.org/example'"
	-->
<!--======================== dtbook Content Models ========================-->

<!--HB: 2004-04-05 % list removed: as content reduced to contain only <list>.-->

<!--jpritchett@rfbd.org:  2006-07-07.  Added %externalFlow; to %dtbookblock;-->
<!--jpritchett@rfbd.org:  2007-12-10.  Removed %dtbookblock; (no longer referenced) -->

<!ENTITY % dtbookblocknoimggroup
    "author | prodnote | sidebar | note |
        annotation %externalblock;" >
    <!-- block elements unique to dtbook without imggroup. -->

<!--HB: 2004-03-25 36f: caption: removed from % inlineinblock. -->

<!ENTITY % inlineinblock
    "a | cite | samp | kbd | pagenum" >
    <!-- inlines that may alternatively be in block elements. -->

<!--HB: 2004-03-25 30: hr: eliminated, so dropped from % block. -->

<!--HB: 2004-03-29 % block additions:
    poem | linegroup | byline | dateline | epigraph. -->

<!--jpritchett@rfbd.org:  2006-07-07.  Added %externalFlow; to %block;-->

<!ENTITY % block
    "p | list | dl | div | blockquote | img | imggroup |
         poem | linegroup | byline | dateline | epigraph |
         table | address | line | %dtbookblocknoimggroup; %externalFlow;" >

    <!-- block elements from [HTML401STRICT] dtd augmented by dtbook-unique
         elements (note: list container difers from html ol and ul.) -->

<!--HB: 2004-03-25 30: hr: eliminated, dropped from % blocknoimggroup. -->

<!--HB: 2004-03-29 % blocknoimggroup additions:
    poem | linegroup | byline | dateline | epigraph. -->

<!--MM: 2004-08-17 Added %dtbookblocknoimggroup; to % blocknoimggroup, 
        from which it had been accidentally dropped.-->
<!ENTITY % blocknoimggroup
    "p | list | dl | div | blockquote |
         poem | linegroup | byline | dateline | epigraph |
         table | address | line | %dtbookblocknoimggroup;" >

    <!-- block elements from [HTML401STRICT] dtd augmented by dtbook-unique
        elements. -->

<!--HB: 2004-03-29 % docblockorinline additions:
    poem | linegroup | byline | dateline | epigraph. -->

<!--HB: 2004-04-08 covertitle: added to % docblockorinline -->

<!--HB: 2004-04-27 blockhead: added to % docblockorinline; -->
<!--MM: 2004-07-23 changed blockhead to bridgehead; eliminated poem, linegroup, 
        byline, dateline, and epigraph since already present via %block -->

<!ENTITY % docblockorinline
         "doctitle | docauthor | covertitle | bridgehead | 
          %block; | %inlineinblock;">
    <!-- common non-head elements for use with level or levelN -->

<!--========================= Document Structure ==========================-->

<!ENTITY % dtbookcontent
    "head, book" >
    <!-- dtbookContent designates that each dtbook has a <head> of
        metainformation preceding the <book> content.
    -->

<!--Use: dtbook is the root element in the Digital Talking Book DTD.
    <dtbook> contains metadata in <head> and the contents itself
    in <book>.
    -->

<!ELEMENT dtbook (%dtbookcontent;) >

<!--HB: 2004-04-05 dtbook: added attribute xmlns with FIXED value 
    'http://www.loc.gov/nls/z3986/2004/dtbook'
    Also updated version value from 1.1.0' to '1.1.1'. -->

<!--Attuse: dtbook

    "version" is required, and contains the specific
    version of the dtd, so that the dtd version for any dtbook can
    be recognized.

    "xmlns" is the URL where this dtd and its related materials can
    be found.

    "%i18n;" internationalization attributes characterize the <book>.
    Those values may be adjusted for language changes within it.
    -->

<!--HB: 2004-04-05 version: updated from '1.1.0' to '1.1.1'.
    added value for xmlns: 
    %URI; #FIXED 'http://www.loc.gov/nls/z3986/2004/dtbook/'. -->
    <!--MM: 2005-03-11 changed value for xmlns to: 
    %URI; #FIXED 'http://www.loc.gov/nls/z3986/2005/dtbook/'. -->
    <!--MM: 2005-04-26 version: updated to 1.2.2-->
    <!--MG: 2005-06-26 version: updated to 2005-1-->
    <!--jpritchett@rfbd.org:  2006-07-07  updated @version to 2005-2 -->
<!--jpritchett@rfbd.org:  2006-07-07.  Added %externalNamespaces; -->
    <!--jpritchett@rfbd.org:  2007-12-07  updated @version to 2005-3 -->
    
 

<!--============================ Book Content =============================-->

<!--Use: book surrounds the actual content of the document, which
    is divided into <frontmatter>, <bodymatter>, and <rearmatter>.
    <head>, which contains metadata, precedes <book>.
    -->

<!ELEMENT book (frontmatter?, bodymatter?, rearmatter?) >

 

<!--======================== Book Major Structures ========================-->

<!--Use: frontmatter usually contains <doctitle> and <docauthor>, as
    well as preliminary material that is often enclosed in appropriate
    <level> or <level1>. Content may include copyright notice, foreword,
    acknowledgments, table of contents, etc. <frontmatter> serves as a
    guide to the content and nature of a <book>.
    -->
<!--HB: 2004-03-25 29: frontmatter: eliminate %block;
    level or level1 container is required. -->

<!--HB: 2004-04-08 frontmatter: added covertitle. -->

<!--jpritchett@rfbd.org:  2006-07-06 doctitle now required, order of doctitle, covertitle, docauthor fixed. -->

<!ELEMENT frontmatter (doctitle, covertitle?, docauthor*, (level | level1)*) >

 

<!--Use: bodymatter consists of the text proper of a book, as contrasted
    with preliminary material <frontmatter> or supplementary information
    in <rearmatter>.
    -->

<!--HB: 2004-03-25 29: bodymatter: eliminate %block;
    level or level1 container is required. -->

<!ELEMENT bodymatter (level | level1)+ >

 

<!--Use: rearmatter contains supplementary material such as
    appendices, glossaries, bibliographies, and indices. It follows
    the <bodymatter> of the book.
    -->
<!--HB: 2004-03-25 29: rearmatter: eliminate %block;
    level or level1 container is required. -->

<!ELEMENT rearmatter (level | level1)+ >

 

<!--================== dtbook Recursive Structure level ===================-->

<!--HB: 2004-03-25 28: level: add constraint - at most one <levelhd> 
        (later changed to <hd>) per <level>. -->

<!--Use: level is an alternative tag for marking the major
    structures in a book. It may be used recursively, i.e., repeated
    indefinitely with each successive occurrence nesting within the
    previous. It may also be included in a subsequent higher level.
    At most one <hd> heading child may be used.
    Subordinate levels have greater depth. Contrast with the explicit
    <level1>...<level6> elements, which may not be intermixed with
    <level>.
    -->
<!--HB: 2004-03-26 34: level: make contentmodel (...)+, rather than (...)*. -->
<!--MM: 2004-07-30 level: Changed content model to eliminate ambiguity. -->
<!--MM, DP: 2004-08-17 Corrected typos in content models of level 
            and level1-level6.-->
<!--MM: 2004-09-15 level: Simplified content model. -->
<!--MM: 2005-03-10 level: Reverted to 2004-08-17 content model as simplified 
        content model was not valid. -->

<!ELEMENT level ((hd, (%docblockorinline; | level)+) | 
  ((%docblockorinline; | level)+, (hd, (%docblockorinline; | level)+)?))
>

<!--Attuse: level

    "class" identifies the actual name (e.g., part,
    chapter, section, subsection) of the structure it marks.
    "depth" indicates the nesting depth, starting at 1.
    -->

 

<!--============ dtbook Hierarchic Structure level1 ... level6 ============-->

<!--Use: level1 is the highest-level container of major divisions of
    a book. Used in <frontmatter>, <bodymatter>, and <rearmatter> to
    mark the largest divisions of the book (usually parts or chapters),
    inside which level2 subdivisions (often sections) may nest.
    The class attribute identifies the actual name (e.g., part, chapter)
    of the structure it marks. Contrast with <level>.
    At most one heading <h1> may be used.
    -->

<!--HB: 2004-03-25 28: level1: added constraint - at most one <h1> 
        per <level1>. -->

<!--HB: 2004-03-26 34: level1: make contentmodel (...)+, rather than (...)*. -->
<!--MM: 2004-07-30 level1: Changed content model to eliminate ambiguity. -->
<!--MM, DP: 2004-08-17 Corrected typos in content models of level 
            and level1-level6.-->
<!--MM: 2004-09-15 level1: Simplified content model. -->
<!--MM: 2005-03-10 level1: Reverted to 2004-08-17 content model as simplified 
        content model was not valid. -->

<!ELEMENT level1 ((h1, (%docblockorinline; | level2)+) | 
((%docblockorinline; | level2)+, (h1, (%docblockorinline; | level2)+)?))
>

 

<!--Use: level2 contains subdivisions that nest within <level1>
    divisions. The class attribute identifies the actual name (e.g.,
    subpart, chapter, subsection) of the structure it marks.
    At most one heading <h2> may be used.
    -->

<!--HB: 2004-03-25 28: level2: added constraint - at most one <h2> 
        per <level2>. -->
<!--HB: 2004-03-26 34: level2: make contentmodel (...)+, rather than (...)*. -->
<!--MM: 2004-07-30 level2: Changed content model to eliminate ambiguity. -->
<!--MM, DP: 2004-08-17 Corrected typos in content models of level 
            and level1-level6.-->
<!--MM: 2004-09-15 level2: Simplified content model. -->
<!--MM: 2005-03-10 level2: Reverted to 2004-08-17 content model as simplified 
        content model was not valid. -->

<!ELEMENT level2 ((h2, (%docblockorinline; | level3)+) | 
((%docblockorinline; | level3)+, (h2, (%docblockorinline; | level3)+)?))
>

 

<!--HB: 2004-03-25 28: level3: added constraint - at most one <h3> 
        per <level3>. -->
<!--MM: 2004-07-08 34: level3: make contentmodel (...)+, rather than (...)*. -->
<!--MM: 2004-07-30 level3: Changed content model to eliminate ambiguity. -->
<!--MM, DP: 2004-08-17 Corrected typos in content models of level 
            and level1-level6.-->
<!--MM: 2004-09-15 level3: Simplified content model. -->
<!--MM: 2005-03-10 level3: Reverted to 2004-08-17 content model as simplified 
        content model was not valid. -->


<!--Use: level3 contains sub-subdivisions that nest within <level2>
    subdivisions (e.g., sub-subsections within subsections). The class
    attribute identifies the actual name (e.g., section, subpart,
    subsubsection) of the subordinate structure it marks.
    At most one heading <h3> may be used.
    -->

<!ELEMENT level3 ((h3, (%docblockorinline; | level4)+) | 
((%docblockorinline; | level4)+, (h3, (%docblockorinline; | level4)+)?))
>

 

<!--HB: 2004-03-25 28: level4: added constraint - at most one <h4> 
        per <level4>. -->
<!--MM: 2004-07-08 34: level4: make contentmodel (...)+, rather than (...)*. -->
<!--MM: 2004-07-30 level4: Changed content model to eliminate ambiguity. -->
<!--MM, DP: 2004-08-17 Corrected typos in content models of level 
            and level1-level6.-->
<!--MM: 2004-09-15 level4: Simplified content model. -->
<!--MM: 2005-03-10 level4: Reverted to 2004-08-17 content model as simplified 
        content model was not valid. -->


<!--Use: level4 contains further subdivisions that nest within <level3>
    subdivisions. The class attribute identifies the actual name
    of the subordinate structure it marks.
    At most one heading <h4> may be used.
    -->

<!ELEMENT level4 ((h4, (%docblockorinline; | level5)+) | 
((%docblockorinline; | level5)+, (h4, (%docblockorinline; | level5)+)?))
>

 

<!--HB: 2004-03-25 28: level5: added constraint - at most one <h5> 
        per <level5>. -->
<!--MM: 2004-07-08 34: level5: make contentmodel (...)+, rather than (...)*. -->
<!--MM: 2004-07-30 level5: Changed content model to eliminate ambiguity. -->
<!--MM, DP: 2004-08-17 Corrected typos in content models of level 
            and level1-level6.-->
<!--MM: 2004-09-15 level5: Simplified content model. -->
<!--MM: 2005-03-10 level5: Reverted to 2004-08-17 content model as simplified 
        content model was not valid. -->


<!--Use: level5 contains further subdivisions that nest within <level4>
    subdivisions. The class attribute identifies the actual name
    of the subordinate structure it marks.
    At most one heading <h5> may be used.
    -->


<!ELEMENT level5 ((h5, (%docblockorinline; | level6)+) | 
((%docblockorinline; | level6)+, (h5, (%docblockorinline; | level6)+)?))
>

 

<!--HB: 2004-03-25 28: level6: added constraint - at most one <h6> 
        per <level6>. -->
<!--MM: 2004-07-08 34: level6: make contentmodel (...)+, rather than (...)*. -->
<!--MM: 2004-07-23 34: level6: replaced "%block | %inlineinblock" 
        with "%docblockorinline;" per other leveln models. -->
<!--MM: 2004-07-30 level6: Changed content model to eliminate ambiguity. -->
<!--MM, DP: 2004-08-17 Corrected typos in content models of level 
            and level1-level6.-->
<!--MM: 2004-09-15 level6: Simplified content model. -->
<!--MM: 2005-03-10 level6: Reverted to 2004-08-17 content model as simplified 
        content model was not valid. -->


<!--Use: level6 contains further subdivisions that nest within <level5>
    subdivisions. The class attribute identifies the actual name
    of the subordinate structure it marks.
    At most one heading <h6> may be used.
    -->

<!ELEMENT level6 ((h6, (%docblockorinline;)+) | 
((%docblockorinline;)+, (h6, (%docblockorinline;)+)?))
>

 

<!--============================= Text Markup =============================-->

<!ENTITY % phrase
    "em | strong | dfn | code | samp | kbd | cite | abbr | acronym" >
    <!-- inline text elements -->

<!--HB: 2004-04-23 % special: eliminated linenum from % special,
     linenum only appears within line. --> 

<!ENTITY % special
    "a | img | imggroup | br | q | sub | sup | span | bdo " >
    <!-- special inline text elements -->

<!--HB: 2004-04-23 % specialnoa: eliminated linenum from % specialnoa,
     linenum only appears within line. --> 

<!ENTITY % specialnoa
    "img | imggroup | br | q | sub | sup | span | bdo " >
    <!-- specialnoa inline text elements for anchor <a> -->


<!--=========================== Inline Entities ===========================-->

<!--jpritchett@rfbd.org:  2006-08-11.  Add %externalFlow to %dtbookinline; -->

<!ENTITY % dtbookinline
     "sent | w | pagenum | prodnote | annoref | noteref %externalinline; %externalFlow;" >
    <!-- dtbook added inline text elements -->

<!ENTITY % inline
    "#PCDATA | %phrase; | %special; | %dtbookinline;" >
    <!-- inline text elements -->
    
<!--HB: 2004-03-25 36h: to % inlinenoa add %dtbookinline;. -->
<!--MM: 2004-07-23 Remove %externalinline; since already present 
        via %dtbookinline;.-->

<!ENTITY % inlinenoa
    "#PCDATA | %phrase; | %specialnoa; | %dtbookinline;" >
    <!-- inlinenoa excludes nested <a> -->

<!--jpritchett@rfbd.org:  2006-07-07.  Added %externalFlow %inlines;, %inlinew; -->

<!ENTITY % inlines
     "#PCDATA | %phrase; | %special; | pagenum | w | prodnote | annoref |
         noteref %externalinline; %externalFlow;" >
    <!-- inlines excludes direct nesting of sentences <sent> -->

<!ENTITY % inlinew
     "#PCDATA | %phrase; | %special; %externalinline; %externalFlow;" >
    <!-- inlinew for word <w> excludes any of the %dtbookinline; -->

<!ENTITY % inlinenopagenum
     "#PCDATA | %phrase; | %special; |
          sent | w | annoref | noteref %externalinline;" >
    <!-- inlinenopagenum excludes direct <pagenum> in <table> <th> and <td>. -->

<!ENTITY % inlinenoprodnote
     "#PCDATA | %phrase; | %special; |
          sent | w | pagenum | annoref | noteref %externalinline;" >
    <!-- inlinenoprodnote excludes direct <prodnote>, as they shouldn't nest -->

<!--=================== Flow (Block or Inline) Entities ===================-->

<!--jpritchett@rfbd.org:  2006-07-07.  Added %externalFlow to %flow;, %flownopagenum; -->

<!ENTITY % flow
    "%inlinenoprodnote; | %blocknoimggroup; %externalFlow;" >
    <!-- flow elements add inlinenoprodnote to block -->


<!ENTITY % flownopagenum
    "%inlinenopagenum; | %blocknoimggroup; %externalFlow; " >
    <!-- flownopagenum ideally excludes pagenum though can get in
        indirectly through elements of %blocknoimggroup; -->

<!--========= Br, Line, Linenum, Address, and Div Content Models ==========-->

<!--Use: br marks a forced line break.
    -->

<!ELEMENT br EMPTY >

<!--Attuse: br

    The %coreattrs; only appear, as there is no content
    to which the more general %attrs; apply.
    -->

 

<!--Use: line marks a single logical line of text. Often used in
    conjunction with <linenum> in documents with numbered lines.
    -->

<!ELEMENT line (%inline; | linenum)* >

 

<!--HB: 2004-03-30 poem: added linenum use. -->

<!--Use: linenum contains a line number, for example in legal text, or <poem>.
    -->

<!ELEMENT linenum (#PCDATA) >

 

<!--Use: address contains a location at which a person or agency
    may be contacted. By use of <line> to contain content of the
    individual lines, the class attribute can be used to identify
    the content of that <line>. For example, class values might include:
    name, address, region (state. province, etc.), country, location
    code (such as zipcode, provincial code), phone, fax, email, etc.
    -->

<!ELEMENT address (%inline; | line)* >

 

<!--Use: div is a generic container for subdivisions of a book. The
    <level1> ... <level6> hierarchy, or the <level> tag used recursively,
    should mark the major hierarchical structures of a book, while <div>
    is used in less formal circumstances or when for production purposes
    it is desired that a structure should be treated differently.
    Compare with <span>, which is used in inline settings.
    -->

<!--HB: 2004-04-08 div: added covertitle. --> 
<!--MM: 2004-07-30 Dropped 'level' attribute from element div. -->
<!--jpritchett@rfbd.org:  2006-07-06 Changed model to %docblockorinline to include bridgehead -->

<!ELEMENT div (%docblockorinline;)+ >

<!--Attuse: div

    "class" value can identify the
    actual name (e.g., part, chapter, letter) of the structure it marks.
    -->

 

<!--=== dtbook Block Elements: Title, Author, Prodnote, Sidebar ===-->

<!--HB: 2004-04-04 35b  title: added <title> for use in <poem> or <cite>. -->

<!--Use: title contains the title of a <poem> or <cite> (citation)
    -->

<!--jpritchett@rfbd.org:  2006-07-06 Added %coreattrs (id, class, title, xml:space) to attribute list -->
<!--jpritchett@rfbd.org 2007-12-17:  Changed %coreattrs to %attrs -->
<!--jpritchett@rfbd.org 2007-12-17:  Expanded content model to include inlines -->

<!ELEMENT title (%inline;)* >

 

<!--Use: author identifies the writer of a work other than this one.
    Contrast with <docauthor>,  which identifies the author of this work.
    <author> typically occurs within <poem>, <blockquote> or <cite>.
    -->

<!ELEMENT author (%inline;)* >

 

<!--HB: 2004-03-25 35d: notice element dropped: its purpose is sufficiently
    achieved with sidebar with attribute render="required." This provides
    sufficient capability for admonitions like warning, hazard, 
    danger, or caution. -->

<!--Use: prodnote contains language added to the alternative-format
    version by the producer; commonly used to:
    1) provide descriptions of one or more visual elements such
        as charts, graphs, etc.
    2) supply operating instructions
    3) describe differences between the print book and the audio
    version.
    -->

<!ELEMENT prodnote (%flow;)* >

<!--Attuse: prodnote

    "imgref" identifies the space-separated id value(s)
    on pertinent images <img>.

    "render" indicates that the content is
    'required' or 'optional' for the user. If optional, some user
    preference may allow skipping over the content. But <prodnote
    render='required'> is essential content for the user. An
    audible cue could announce the presence of the <prodnote>.
    -->

<!--HB: 2004-03-25 35g: prodnote: use render="required" to achieve the explicit
    admonition such as caution, warning, danger, or hazard, from the
    text. Optionally put the specific admonition in the class attribute
    value, repeating it from the text. -->


 

<!--Use: sidebar contains information supplementary to the main
    text and/or narrative flow and is often boxed and printed apart
    from the main text block on a page. It may have a heading <hd>.
    -->

<!ELEMENT sidebar (%flow; | hd)* >

<!--HB: 2004-03-25 35g: sidebar: use render="required" to achieve the explicit
    admonition such as caution, warning, danger, or hazard, from the
    text. Optionally put the specific admonition in the class attribute
    value, repeating it from the text. -->

 

<!--Use: note marks a footnote, endnote, etc. Any local reference to
    <note id="yyy"> is by <noteref idref="#yyy">.
    -->

<!ELEMENT note (%block; | %inlineinblock;)+ >

 

<!--Use: annotation is a comment on or explanation of a portion of
    a printed book. It differs from <note> in that an <annotation>
    is usually set in the margin or on a facing page, often with
    no explicit reference to it inserted in the text. Any local
    reference to <annotation id="xxx"> is by <annoref idref="#xxx">.
    -->

<!ELEMENT annotation (%block; | %inlineinblock;)+ >

 

<!--====================== Byline, Epigraph, Dateline =====================-->

<!-- Addenda module for dtbook
     M. Moodie and J. Pritchett
     9 July 2003
     This module defines the <epigraph>, <dateline>, and <byline> elements.
-->

<!--HB: 2004-03-30 epigraph: element added. -->

<!-- Use: epigraph marks a quotation placed at the beginnihg of a work
    or a division of a work.
    -->

<!--MM: 2005-04-22 epigraph - changed ATTLIST to %attrs; --> 

<!ELEMENT epigraph (%flow;)* >

 

<!--HB: 2004-30-30 byline: element added. -->

<!-- Use: byline contains information about the creator of or contributor
    to a work. 
    -->
    
    <!--MM: 2005-04-22 byline - changed ATTLIST to %attrs; --> 

<!ELEMENT byline (%inline;)* >

 

<!--HB: 2004-30-30 dateline: element added. -->

<!-- Use: dateline contains information about the time and/or place at which
    a work was authored. 
    -->
    
    <!--MM: 2005-04-22 dateline - changed ATTLIST to %attrs; --> 

<!ELEMENT dateline (%inline;)* >

 

<!--============================= Poem, Linegroup =========================-->

<!-- dtbook poetry module
     M. Moodie and J. Pritchett
     9 July 2003
     This module defines the <linegroup> and <poem> elements.
-->

<!-- Use: linegroup provides means to group a set of lines of a <poem>.
    -->  

<!ELEMENT linegroup 
    (hd | dateline | epigraph | byline | linegroup | line | pagenum | prodnote |
    noteref | annoref | note | annotation | p | blockquote | img | imggroup)* >

<!--HB: 2004-03-30 linegroup: The class attribute value can identify the
    kind of linegroup, such as "stanza", "chorus", or "canto". -->
    <!--MM: 2005-04-22 linegroup - changed ATTLIST to %attrs; --> 

 

<!--HB: 2004-03-30 poem: removed notice and hr from content model. -->

<!--HB: 2004-03-30 poem: added title and author to content model. -->

<!-- Use: poem is a complete <poem> or fragment thereof.
    -->
    
    <!--MM: 2005-04-22 poem - changed ATTLIST to %attrs; --> 

<!ELEMENT poem (title | author | hd | dateline | epigraph | byline | 
    linegroup | line | pagenum | img | imggroup | sidebar)* >

 

<!--========================= The Anchor Element ==========================-->

<!--Use: a contains an anchor, which is used to reference another
    location, within the same or another <dtbook>.
    -->

<!ELEMENT a (%inlinenoa;)* >

<!--jpritchett@rfbd.org:  2006-07-07  Corrected reference to RFC2046 in comment regarding @type -->
<!--jpritchett@rfbd.org:  2007-12-10  Updated reference from RFC3066 to RFC4646 -->
<!--Attuse: a

    "href" value may have three forms:

    1) '#idref', in the <dtbook>, to the element type having the
        referenced id value;

    2) 'uri', a uniform resource identifier to a resource, typically a
        document, see [RFC2396], possibly restricted to work with only
        the <dtbook> document content, as referenced content is
        expected to be available on the same media, and off-media
        references may not be available;

    3) 'uri#xxx', in the resource uri, the element with id='xxx'.

    Uses of the remaining attributes other than %attrs; are:

        "type" is advisory content MIME type of the target, see [RFC2046];

        "hreflang" is the language code of the href target, see [RFC4646];

        "rel" is a list of forward link type(s), the relationship(s)
            expressed by the href value to the target, space-separated
            if multiple;

        "rev" is a list of reverse link types, the relationship(s)
            to this location from the href target, space-separated
            if multiple;

        "accesskey"=accessibility key character shortcut;

        "tabindex"=tabbing order.
        
        "external" An external link points to media content that is not part 
            of the DTB.  The external media content must be rendered by an 
            external application, whether or not that content is renderable by 
            the DTB player.
    -->

 

<!--=========================== Inline Elements ===========================-->

<!--Use: em indicates emphasis. Usually <em> is rendered in italics.
Compare with <strong>.
    -->

<!ELEMENT em (%inline;)* >

 

<!--Use: strong marks stronger emphasis than <em>. Visually <strong> is
    usually rendered bold.
    -->

<!ELEMENT strong (%inline;)* >

 

<!--Use: dfn marks the first occurrence of a word or term that is
    defined or explained there or elsewhere in <book>. Often
    <dfn> is rendered in italics, sometimes in parentheses.
    -->

<!ELEMENT dfn (%inline;)* >

 

<!--Use: kbd designates information that the reader is to input
    directly into a computer using the keyboard.
    -->

<!ELEMENT kbd (%inline;)* >

 

<!--Use: code designates a fragment of computer code.
    -->

<!ELEMENT code (%inline;)* >

<!-- jpritchett@rfbd.org: 2006-09-08  Expanded %attrs; to prevent duplication of @xml:space -->
<!--Attuse: code

    See http://www.w3.org/TR/xml11/#sec-white-space for information on xml:space.
    -->

 

<!--Use: samp contains a sample of work created by the author for
    use as an example or template. For example, a sample business
    letter, resume, computer program output, or form.
    -->

<!ELEMENT samp (%inline;)* >

<!-- jpritchett@rfbd.org: 2006-09-08  Expanded %attrs; to prevent duplication of @xml:space -->
<!--Attuse: samp

    See http://www.w3.org/TR/xml11/#sec-white-space for information on xml:space.
    -->

 

<!--Use: cite marks a reference (or citation) to another document.
    -->

<!--HB: 2004-03-25 35a: cite: allow title and author. -->

<!ELEMENT cite (%inline; | title | author)* >

 

<!--Use: abbr designates an abbreviation, a shortened form of a
    word. For examples: Mr., approx., lbs., rec'd.
    Contrast with <acronym>.
    -->

<!ELEMENT abbr (%inline;)* >

<!--Attuse: abbr

    "title" value may expand that abbreviation.
    -->

 

<!--Use: acronym marks a word formed from key letters (usually
    initials) of a group of words. For examples: UNESCO, NATO, XML, US.
    Contrast with <abbr>.
    -->

<!ELEMENT acronym (%inline;)* >

<!--Attuse: acronym

    "title" value may expand that acronym.
    "pronounce" value 'yes' indicates that the
    acronym is pronounceable as a word (for example, NATO);
    'no' that the acronym is best presented as a sequence
    of letters (for examples, "XML" or  "US").
    -->

 

<!--Use: sub indicates a subscript character (printed below a
    character's normal baseline). Can be used recursively and/or
    intermixed with <sup>.
    -->

<!ELEMENT sub (%inline;)* >

 

<!--Use: sup marks a superscript character (printed above a
    character's normal baseline). Can be used recursively and/or
    intermixed with <sub>.
    -->

<!ELEMENT sup (%inline;)* >

 

<!--Use: span is a generic container for use in inline settings
    when no specific tag exists for a given situation. The class
    attribute may describe the nature of the text it marks (e.g.,
    a typographical error). May be used to mark a class of items
    to which styles are to be applied. Compare with <div>, which
    is used in a block settings.
    -->

<!ELEMENT span (%inline;)* >

 

<!--Use: bdo is used in special cases where the automatic actions
    of the bi-directional algorithm would result in incorrect display.
    -->

<!ELEMENT bdo (%inline;)* >

<!--jpritchett@rfbd.org:  2006-07-07  Changed @lang to @xml:lang -->
<!--jpritchett@rfbd.org 2007-12-17:  Added @smilref and @showin -->
<!--Attuse: bdo

    "lang" indicates the language of the content.

    "dir" indicates the writing direction: 'ltr' is
    left-to-right, 'rtl' is right-to-left.
    -->

 

<!--=================== dtbook Inline Sentence and Word ===================-->

<!--Use: sent marks a sentence.
    -->

<!ELEMENT sent (%inlines;)* >

 

<!--Use: w marks a word.
    -->

<!ELEMENT w (%inlinew;)* >

 

<!--======== Inline Page Number, Footnote and Annotation Reference ========-->

<!--MM: 2004-07-30 Revised description of page types for 'page' attribute on 
        element pagenum.  Dropped recommendation to use page number as id. -->

<!--Use: pagenum contains one page number as it appears from the print
    document, usually inserted at the point within the file immediately
    preceding the first item of content on a new page.
    -->

<!ELEMENT pagenum (#PCDATA) >

<!--Attuse: pagenum

    "page" allows three kinds of page numbering
    schemes to be identified:
    "front" (for roman-numeral pages at the start of a book), 
    "normal" (for pages identified by arabic numerals),
    or "special" (for all other kinds of pages)
    For multi-page continuous content,
    such as large <img> or <table>, put the sequence of <pagenum> on
    the page where that content starts.
    -->

 

<!--Use: noteref marks one or more characters that reference a footnote
    or endnote <note>. Contrast with <annoref>. <noteref> and <note>
    are independently skippable.
    -->

<!ELEMENT noteref (#PCDATA) >

<!--jpritchett@rfbd.org:  2006-07-07  Changed @idref type to %URI to clarify usage -->
<!--jpritchett@rfbd.org:  2006-07-07  Modified comments to clarify @idref usage -->
<!--jpritchett@rfbd.org:  2006-07-07  Corrected reference to RFC2046 in comment regarding @type -->

<!--Attuse: noteref

    "idref" is a URI pointing to the target note, either within
    same document or in another document.  For example:
    <noteref idref='#yyy'> refers to <note id='yyy'> within same document.
    <noteref idref='foobar.xml#xxx'> refers to <note id='xxx'> in document foobar.xml

    "type" provides advisory content MIME type of
    the target, see [RFC2046].
    -->

 

<!--Use: annoref marks a text segment that references an <annotation>.
    Each <annoref> is usually a word, phrase, or whole line that
    is part of the surrounding text (identified in the original
    print book by bolding, italics, etc.). It should not normally
    be allowed to be turned off in a DTB application.
    -->

<!ELEMENT annoref (#PCDATA) >

<!--jpritchett@rfbd.org:  2006-07-07  Changed @idref type to %URI to clarify usage -->
<!--jpritchett@rfbd.org:  2006-07-07  Modified comments to clarify @idref usage -->
<!--jpritchett@rfbd.org:  2006-07-07  Corrected reference to RFC2046 in comment regarding @type -->

<!--Attuse: annoref

    "idref" is a URI pointing to the target annotation, either within
    same document or in another document.  For example:
    <annoref idref='#yyy'> refers to <annotation id='yyy'> within same document.
    <annoref idref='foobar.xml#xxx'> refers to <annotation id='xxx'> in document foobar.xml

    "type" provides advisory content MIME
    type of the targeted id, see [RFC2046].
    -->

 

<!--============================ Inline Quotes ============================-->

<!--Use: q contains a short, inline quotation. Compare with
    <blockquote>, which marks a longer quotation set off from the
    surrounding text.
    -->

<!ELEMENT q (%inline;)* >

<!--Attuse: q

    "cite" may provide a URI reference.
    -->

 

<!--=============================== Images ================================-->

<!-- Image <img> comes from HTML. An <img> may be grouped
       using <imggroup>, with <caption>, and special
       usage instructions or description with <prodnote>. The <imggroup>
       element may contain one or more <img> and any associated
       <caption> and <prodnote>. Multiple <img> may share a single
       caption, or multiple <caption> may apply if several captions
       refer to a single <img>. Multiple <prodnote> may apply if
       different versions are needed for different media.
    -->

<!ENTITY % Length "CDATA" >
    <!-- measured in pixels, percent (nn%) -->

<!ENTITY % MultiLength "CDATA" >
    <!-- measured in integer pixels "n", percent "nn%" of display width,
         "0*" indicating minimum appropriate width based on column
         content, or "nn*" the relative proportional width (".5*" is
         half the available width after any explicit widths have been
         consumed). The lengths are separated by commas or whitespace. -->

<!ENTITY % Pixels "CDATA" >
    <!-- 0 for no <table> border, positive integer for <table> border width
        in pixels. -->

<!--jpritchett@rfbd.org 2007-12-17:  Corrected description of caption/@imgref -->
<!--Use: img marks a visual image. An <img> will always contain an alt and
    generally contain a longdesc, a pointer to a related <prodnote>. The
    <img> may be referenced by a <caption> or <prodnote>, using, for
    example, the form <caption imgref="yyy">the Caption</caption> for
    the <img id="yyy">.
    -->

<!ELEMENT img EMPTY >

<!--Attuse: img

    "src" specifies by URI the location of the image file.

    "alt" is used to supply a short description of the <img>.

    "longdesc" generally contains a pointer to a related
    <prodnote> that contains a detailed description of the <img>.

    The attributes "height" and "width" provide visual sizing
    information, measured in pixels.
    -->

 

<!-- jpritchett@rfbd.org 2007-12-17:  Added pagenum to content model -->

<!--Use: imggroup provides a container for one or more <img> and associated
    <caption>(s) and <prodnote>(s). A <prodnote> may contain a description
    of the image. The content model allows:

    1) multiple <img> if they share a caption, with the ids of
    each <img> in the <caption imgref="id1 id2 ...">,

    2) multiple <caption> if several captions refer to a single
    <img id="xxx"> where each caption has the same
    <caption imgref="xxx">,

    3) multiple <prodnote> if different versions are needed for different
    media (e.g., large print, braille, or print).  If several <prodnote>
    refer to a single <img id="xxx">, each prodnote has the same <prodnote
    imgref="xxx">.
    
    4) one or more <pagenum> if the image group spans several pages.
    -->

<!ELEMENT imggroup (prodnote | img | caption | pagenum)+ >


 

<!--HB: 2004-03-25 30: hr: element dropped horizontal rule as purely visual. -->

<!--============================= Paragraphs ==============================-->

<!--Use: p contains a paragraph, which may contain subsidiary <list> or <dl>.
    -->
 
<!ELEMENT p (%inline; | list | dl)* >

 

<!--=========== Doctitle, Docauthor, Covertitle, and Headings  ============-->


<!--Use: doctitle marks the full title of the book, including any
    subtitles,  <frontmatter>. By convention <doctitle> should appear
    Contrast with covertitle.
    -->

<!ELEMENT doctitle (%inline;)* >

 

<!--Use: docauthor marks each author or editor of this work. Compare with
    <author>, used to mark the author of another work, within <blockquote>
    or <cite>.
    -->

<!ELEMENT docauthor (%inline;)* >

 

<!--Use: covertitle is the short title of a book, often found on the
    spine. It may be the same as the doctitle.
    -->

<!--HB: 2004-04-08 covertitle: element added -->

<!ELEMENT covertitle (%inline;)* >

 


<!--MM: 2004-09-15 Deleted element levelhd, replacing it with hd in content 
        model of level. -->

<!--Use: h1 contains the text of the heading for a <level1> structure.
    -->

<!ELEMENT h1 (%inline;)* >

 

<!--Use: h2 contains the text of the heading for a <level2> structure.
    -->

<!ELEMENT h2 (%inline;)* >

 

<!--Use: h3 contains the text of the heading for a <level3> structure.
    -->

<!ELEMENT h3 (%inline;)* >

 

<!--Use: h4 contains the text of the heading for a <level4> structure.
    -->

<!ELEMENT h4 (%inline;)* >
 

<!--Use: h5 contains the text of the heading for a <level5> structure.
    -->

<!ELEMENT h5 (%inline;)* >

 

<!--Use: h6 contains the text of the heading for a <level6> structure.
    -->

<!ELEMENT h6 (%inline;)* >

 

<!--HB: 2004-04-02 bridgehead: element added. -->
<!--MM: 2004-09-15 bridgehead: changed content model to (%inline;)*, to match 
        hd, and h1-h6. -->

<!--Use: bridgehead is a free-floating heading that is not associated with the
    hierarchical structure of a document. It may occur only subsidiary to one
    of the hierarchic elements. <hd> and <h1> ... <h6> are
    restricted to one occurrence per level or <level1> ... <level6>,
    respectively. <bridgehead> has no such restriction, but should be used
    only when it is clear that none of the structural headings is appropriate.
    See also <hd>.
    -->

<!ELEMENT bridgehead (%inline;)* >

 

<!--Use: hd marks the text of a heading in <level>, <poem>, <list>, <linegroup>,
         or <sidebar>. -->

<!ELEMENT hd (%inline;)* >

 

<!--========================== Preformatted Text ==========================-->

<!-- HTML or XHTML preformatted text is omitted, as inappropriate for
        narrated material. -->

<!--========================== Block-like Quotes ==========================-->

<!--Use: blockquote indicates a block of quoted content that is set
    off from the surrounding text by paragraph breaks. Compare with
    <q>, which marks short, inline quotations.
    -->
<!--HB: 2004-03-25 36i: blockquote allow pagenum. -->

<!ELEMENT blockquote (pagenum | %block;)* >

<!--Attuse: blockquote

    "cite" permits inclusion of the
    URI from which the <blockquote> came.
    -->

 

<!--================== Definition List, and Other Lists ===================-->

<!--Use: dl contains a definition list, usually consisting of pairs of
    terms <dt> and definitions <dd>. Any definition can contain another
    definition list.
    -->

<!ELEMENT dl (dt | dd | pagenum)+ >

 

<!--Use: dt marks a term in a definition list <dl> for which a
    definition <dd> follows.
    -->

<!ELEMENT dt (%inline;)* >

 

<!--Use: dd marks a definition of the preceding term <dt> within a
    definition list <dl>. A definition without a preceding <dt> has
    no semantic interpretation, but is visually presented aligned
    with other <dd>.
    -->

<!ELEMENT dd (%flow;)* >

 

<!--Use: list contains some form of list, ordered, unordered, or preformatted.
    The list may have intermixed heading <hd> (generally only one,
    possibly with <prodnote>) and an intermixture of list items <li>
    and <pagenum>. If bullets and outline enumerations are part of
    the preformatted print content, they are expected to prefix those list
    items in content, rather than be implicitly generated. Note: XHTML
    has explicitly distinguished list element types: ol for ordered,
    and ul for unordered, but not pl for preformatted.
    -->

<!ELEMENT list (hd | prodnote | li | pagenum)+ >

<!--HB: 2004-03-25 36d: list: added start attribute to indicate initial
    ordinal of a numbered list. -->

<!--HB: 2004-03-31 list: changed enum from 'U' to 'A' for uppercase, and
    "X" to 'I' for uppercase Roman. --> 

<!--HB: 2004-03-31 list: changed enum value choices from "U" to "A" for
    uppercase, and "X" to "I" for uppercase Roman for compatibility
    with xhtml. -->

<!--HB: 2004-04-02 list: expanded discussion on enum attribute. -->

<!--HB: 2004-04-27 list: added type "pl" to indicate that the list is 
    preformatted so no bullets or enumerations should be added. -->

<!--Attuse: list

    "type" indicates whether the list items
    <li> are ordered 'ol' or 
             unordered 'ul' or
             preformatted 'pl'.

    "depth" indicates nesting depth of lists within list items <li>
    of ancestor lists, starting at 1.

    "enum" indicates the kind of enumeration:
        '1'=integer,
        'a'=lowercase,
        'A'=uppercase,
        'i'=lowercase Roman, or
        'I'=uppercase Roman.

    "start" value indicates the ordered list integer ordinal, impllcitly 1,
    to denote the first ordered list item. Its value is determined for the
    indicated enum type. A start value is useful when there is an injection
    of a different element type, such as <pageno>.
    -->

<!--HB: 2004-04-22 list: removed bullet attribute, It is up to a style-sheet to
    make any needed visual distinction for nested unordered lists, or if the
    list type is "pl" preformatted the bullet form may be there. -->

 

<!--Use: li marks each list item in a <list>. <li> content may be
    either inline or block and may include other nested
    lists. Alternatively it may contain a sequence of list item
    components, <lic>, that identify regularly occurring content,
    such as the heading and page number of each entry in a
    table of contents.
    -->

<!ELEMENT li (%flow; | lic)* >

 

<!--Use: lic ("list item component") allows ordered substructure
    within a list item <li>. Used when a list item is made up of
    two or more components, as in a table of contents entry.
    The same number of <lic> should occur in each <li>. If not,
    correspondence of <lic> in different <li> is in order of
    occurrence for the current writing direction of the <li>.
    -->

<!ELEMENT lic (%inline;)* >

<!--Attuse: lic

    class attribute may be used to identify the particular
    component of a list item <li>. For example, in a table of contents
    class values might include "section", and "pagenumber".
    -->

 

<!--=============================== Tables ================================-->

<!-- The XHTML <table> model is used, including the presentational
        attributes that have little meaning in Digital Talking Books,
        but may be useful for concurrent display in different media.
        That model is derived from IETF HTML table standard, see [RFC1942].

        Note: The XHTML <table> model has been enhanced from HTML to allow
        a simple <table> of one or more rows <tr>.
    -->

<!ENTITY % Scope
    "(row | col | rowgroup | colgroup)" >
    <!-- Scope specifies a set of data cells for which the <th> provides
        header information. -->

<!ENTITY % TFrame
    "(void | above | below | hsides | lhs | rhs | vsides | box | border)" >
    <!-- TFrame identifies the sides that are visually framed. -->

<!ENTITY % TRules
    "(none | groups | rows | cols | all)" >
    <!-- %TRules identifies where visual rulings appear.
        If no Trules is present then assume:
        'none' if border is absent or border='0' otherwise 'all'. -->


<!ENTITY % cellhalign
    "align      (left|center|right|justify|char) #IMPLIED
     char       %Character;    #IMPLIED
     charoff    %Length;       #IMPLIED" >
    <!-- % cellhalign
        cellhalign sets horizontal alignment of content in
        a table cell.

        char indicates a character expected in each table
        cell of a column that text should align on. The default is
        the decimal point for the current language.

        charoff sets the alignment offset of the first character
        to align on, as specified with char.

        Inheritance order for horizontal alignment is <th>|<td>,
        <tr>, <thead>|<tfoot>|<tbody>, <col>, <colgroup>, default. The
        default value is from the user agent, and may be affected
        by user preference. The recommended default alignment for
        <th> is center, and for <td> is left.
        -->


<!ENTITY % cellvalign
    "valign     (top|middle|bottom|baseline) #IMPLIED" >
    <!-- % cellvalign
        valign sets vertical alignment of content in a table cell.

        Inheritance order for vertical alignment is <th>|<td>, <col>,
        <colgroup>, <tr>, <thead>|<tfoot>|<tbody>, default. The
        default value is from the user agent, and may be affected
        by user preference. The recommended default is middle.
       -->

<!--jpritchett@rfbd.org 2007-12-19:  Edited comment to reflect new content models -->

<!--Use: table contains cells of tabular data arranged in rows and
    columns. A <table> may have a <caption>. It may have descriptions of
    the columns in <col>s or groupings of several <col> in <colgroup>.
    A simple <table> may be made up of just rows <tr>. Note the logical order of
    optional <thead>, optional <tfoot>, then one or more of either
    <tbody> or just rows <tr>. This order accommodates simple or large,
    complex tables. The <thead> and <tfoot> information usually helps
    identify content of the <tbody> rows, For a multiple-page print
    <table> the <thead> and <tfoot> are repeated on each page, but
    not redundantly tagged.
    -->

<!--jpritchett@rfbd.org 2007-12-19:  Added pagenum to content model -->
       
<!ELEMENT table (caption?, (col* | colgroup*), thead?, tfoot?, (tbody+| (tr|pagenum)+)) >

<!--Attuse: table

    "summary" value provides a textual summary.

    The attributes: "width", "border", "frame", "rules", "cellspacing",
    and "cellpadding" provide visual presentation guidance. See their
    explanation in the comment following those parameter entity
    declarations.
    -->

 
<!--HB: 2004-03-25 36f: caption: removed use for <img>. -->
<!--MM: 2004-09-15: caption: changed content model to %flow;. -->

<!--Use: caption describes a <table>, or <imggroup>. If used with
    <table> it must follow immediately after the <table> start tag. If used
    with <imggroup> it is not so constrained.
    -->

<!ELEMENT caption (%flow;)* >


<!--jpritchett@rfbd.org:  2007-12-17 Corrected description of @imgref -->
<!--Attuse: caption

    "imgref" value (or space-separated
    id values) identifies the id values of the <img>(s) to which the
    caption applies. Only references
    to images within the same document are allowed.
    Note: imgref is an extension for dtbook.
    -->

 


<!--Use: thead marks header information in a <table>, consisting of
    one or more rows <tr> of <th> cells. Use <thead> to duplicate
    headers when breaking table across page boundaries, or for static
    headers when <tbody> sections are rendered in scrolling panel.
    -->

<!ELEMENT thead (tr)+ >

 


<!--Use: tfoot marks footer information in a <table>, consisting of
    one or more rows <tr>, usually of <th> cells. Use <tfoot> to
    duplicate footers when breaking table across page boundaries,
    or for static footers when <tbody> sections are rendered in
    scrolling panel.
    -->

<!ELEMENT tfoot (tr)+ >

 


<!--Use: tbody marks a group of rows in the main body of a <table>. If
    the <table> is divided into several sections, each consisting of a
    number of rows, each section would be separately tagged with <tbody>.
    The same <thead> and <tfoot> apply to every <tbody> section.
    Use multiple <tbody> sections when rules are needed between groups
    of table rows.
    -->
    
<!--jpritchett@rfbd.org 2007-12-19:  Added pagenum to content model -->

<!ELEMENT tbody ((tr|pagenum)+) >

 

<!--Use: colgroup groups adjacent columns <col> that are semantically
    related.
    -->

<!ELEMENT colgroup (col)* >

<!--Attuse: colgroup

    "span" causes the attributes of one
    col element to apply to more than one column, extending in the
    writing direction for the language. Span is ignored if
    any <col> are present.

    "width" specifies the width of the columns, e.g.

        width='64'        width in screen pixels
        width='0.5*'      relative width of 0.5

    "width" may contain a space- or comma-separated list of widths
    for each <col>, or percentages if values end in '%', or relative
    'nn*' to indicate a fractional portion of the remaining
    widths after more explicit forms have been specified for other
    columns in the colgroup (presumably the sum encompasses all
    the columns). '0*' indicates minimal acceptable width based
    on column content.

    The <col> in a <colgroup> may inherit attribute values
    from it, or the closest enclosing ancestor element:
    <thead>|<tfoot>|<tbody>. If none, then the values are up to the
    user agent, possibly by user preference.
    -->

 

<!--Use: col elements define the alignment properties for cells in
    one or more columns.
    -->

<!ELEMENT col EMPTY >

<!--Attuse: col
    "span" indicates how many columns the <col>
    extends, in the writing direction of the <table>. The
    attribute values apply to <th> and <td> that start in the
    column, even if they extend into the next column(s), by
    span value more than 1, and that next <col> may have different
    attribute values.

    "width" may contain a space- or comma-separated list of widths
    for each <col> of the span, or percentages if values end in '%',
    or relative 'nn*' to indicate a fractional portion of the remaining
    widths after more explicit forms have been specified for other
    columns in the span (presumably the sum encompasses all
    the columns of this span, and of other <colgroup>s). '0*' indicates
    minimal acceptable width based on individual <col> content.

    <col> may inherit attribute values from the most immediate
    enclosing ancestor element: <colgroup>, <thead>|<tbody>|<tfoot>.
    If none, it is up to the user agent, possibly by user preference.
    -->

 

<!--Use: tr marks one row of a <table> containing <th> or <td> cells.
    -->

<!ELEMENT tr (th | td)+ >

<!--Attuse: tr

    %cellvalign; values provide default vertical alignment
    values for <th> and <td> in the row, overriding any from
        <thead>|<tbody>|<tfoot>, <col>, <colgroup>
    If none, it is up to the user agent, possibly by user preference.

    %cellhalign; values provide default horizontal alignment from
        <thead>|<tbody>|<tfoot>
    If none, it is up to the user agent, possibly by user preference.

    -->

 

<!--Use: th indicates a table cell containing header information.
    -->

<!ELEMENT th (%flownopagenum;)* >

<!--Attuse: th

    The uses of attributes other than %attrs; %cellvalign; and %cellhalign;
    are shown below. See [HTML401STRICT] for details and examples.

    "abbr" provides an abbreviated name for a <th> cell that can be used
    when referring to that <th> cell. Its default value is the cell content.

    "axis" is used to place cells into conceptual categories in order to
    provide improved access to information.

    "headers" provides the id value(s), used with <td> cells, to reference
    one or more cells with <th id="xxx"> that contain headings that
    collectively describe or qualify the content of the cell, for example
    <td headers="id1 id2">.

    "scope" identifies one of
        (row | rowgroup | column | colgroup)
    to which the header information applies.

    "rowspan" indicates the total number of rows that the cell extends, by
    default 1. All spanned cells share these attributes.

    "colspan" indicates the total number of columns the cell extends,
    by default 1, in the writing direction of the table. All spanned
    cells share these attributes.
    -->

 

<!--Use: td indicates a table cell containing data.
    -->

<!ELEMENT td (%flownopagenum;)* >

<!--Attuse: td

    The uses of attributes other than %attrs; %cellhalign; and %cellvalign;
    are shown below.  See [HTML401STRICT] for details and examples.

    "abbr" provides an abbreviated name for a <th> cell that can be used
    when referring to that <th> cell. Its default value is the cell content.

    "axis" is used to place cells into conceptual categories in order to
    provide improved access to information.

    "headers" provides the id value(s), used with <td> cells, to reference
    one or more cells with <th id="xxx"> that contain headings that
    collectively describe or qualify the content of the cell, for example
    <td headers="id1 id2">.

    "scope" identifies one of
        (row | rowgroup | column | colgroup)
    to which the header information applies.

    "rowspan" indicates the total number of rows that the cell extends, by
    default 1. All spanned cells share these attributes.

    "colspan" indicates the total number of columns the cell extends,
    by default 1, in the writing direction of the table. All spanned
    cells share these attributes.
    -->

 

<!-- End dtbook-2005-3.dtd -->




<!-- Section A: XHTML XML Namespace Framework :::::::::::::::::::: -->

<!ENTITY % NS.prefixed     "INCLUDE" >
<!ENTITY % MATHML.prefixed "%NS.prefixed;" >

<!-- XLink ............... -->

<!ENTITY % XLINK.prefix         "xlink" >		
<!ENTITY % XLINK.xmlns "http://www.w3.org/1999/xlink" >
<!ENTITY % XLINK.xmlns.attrib
     "xmlns:%XLINK.prefix;  CDATA           #FIXED '%XLINK.xmlns;'"
>

<!-- W3C XML Schema ............... -->

<!ENTITY % Schema.prefix         "xsi" >		
<!ENTITY % Schema.xmlns "http://www.w3.org/2001/XMLSchema-instance" >
<!ENTITY % Schema.xmlns.attrib
     "xmlns:%Schema.prefix;  CDATA           #IMPLIED"
>

<!-- MathML .............. -->

<!ENTITY % MATHML.xmlns    "http://www.w3.org/1998/Math/MathML" >
<!ENTITY % MATHML.prefix   "m" >
<![%MATHML.prefixed;[
<!ENTITY % MATHML.xmlns.extra.attrib  "" >
]]>
<!ENTITY % MATHML.xmlns.extra.attrib 
     "%XLINK.xmlns.attrib; 
      %Schema.xmlns.attrib;" >

<![%MATHML.prefixed;[
<!ENTITY % MATHML.pfx  "%MATHML.prefix;:" >
<!ENTITY % MATHML.xmlns.attrib
     "xmlns:%MATHML.prefix;  CDATA   #FIXED '%MATHML.xmlns;'
      %MATHML.xmlns.extra.attrib;"
>
]]>
<!ENTITY % MATHML.pfx  "" >
<!ENTITY % MATHML.xmlns.attrib
     "xmlns        CDATA           #FIXED '%MATHML.xmlns;'
      %MATHML.xmlns.extra.attrib;"
>

<![%NS.prefixed;[
<!ENTITY % XHTML.xmlns.extra.attrib 
     "%MATHML.xmlns.attrib;" >
]]>
<!ENTITY % XHTML.xmlns.extra.attrib
     "%XLINK.xmlns.attrib;
      %Schema.xmlns.attrib;"
>

<!-- Section B: MathML Qualified Names ::::::::::::::::::::::::::::: -->

<!-- 9. This section declares parameter entities used to provide
        namespace-qualified names for all MathML element types.
-->

<!ENTITY % abs.qname            "%MATHML.pfx;abs" >
<!ENTITY % and.qname            "%MATHML.pfx;and" >
<!ENTITY % annotation-xml.qname "%MATHML.pfx;annotation-xml" >
<!ENTITY % annotation.qname     "%MATHML.pfx;annotation" >
<!ENTITY % apply.qname          "%MATHML.pfx;apply" >
<!ENTITY % approx.qname         "%MATHML.pfx;approx" >
<!ENTITY % arccos.qname         "%MATHML.pfx;arccos" >
<!ENTITY % arccosh.qname        "%MATHML.pfx;arccosh" >
<!ENTITY % arccosh.qname        "%MATHML.pfx;arccosh" >
<!ENTITY % arccot.qname         "%MATHML.pfx;arccot" >
<!ENTITY % arccoth.qname        "%MATHML.pfx;arccoth" >
<!ENTITY % arccsc.qname         "%MATHML.pfx;arccsc" >
<!ENTITY % arccsch.qname        "%MATHML.pfx;arccsch" >
<!ENTITY % arcsec.qname         "%MATHML.pfx;arcsec" >
<!ENTITY % arcsech.qname        "%MATHML.pfx;arcsech" >
<!ENTITY % arcsin.qname         "%MATHML.pfx;arcsin" >
<!ENTITY % arcsinh.qname        "%MATHML.pfx;arcsinh" >
<!ENTITY % arctan.qname         "%MATHML.pfx;arctan" >
<!ENTITY % arctanh.qname        "%MATHML.pfx;arctanh" >
<!ENTITY % arg.qname            "%MATHML.pfx;arg" >
<!ENTITY % bvar.qname           "%MATHML.pfx;bvar" >
<!ENTITY % card.qname           "%MATHML.pfx;card" >
<!ENTITY % cartesianproduct.qname "%MATHML.pfx;cartesianproduct" >
<!ENTITY % ceiling.qname         "%MATHML.pfx;ceiling" >
<!ENTITY % ci.qname             "%MATHML.pfx;ci" >
<!ENTITY % cn.qname             "%MATHML.pfx;cn" >
<!ENTITY % codomain.qname       "%MATHML.pfx;codomain" >
<!ENTITY % complexes.qname      "%MATHML.pfx;complexes" >
<!ENTITY % compose.qname        "%MATHML.pfx;compose" >
<!ENTITY % condition.qname      "%MATHML.pfx;condition" >
<!ENTITY % conjugate.qname      "%MATHML.pfx;conjugate" >
<!ENTITY % cos.qname            "%MATHML.pfx;cos" >
<!ENTITY % cosh.qname           "%MATHML.pfx;cosh" >
<!ENTITY % cot.qname            "%MATHML.pfx;cot" >
<!ENTITY % coth.qname           "%MATHML.pfx;coth" >
<!ENTITY % csc.qname            "%MATHML.pfx;csc" >
<!ENTITY % csch.qname           "%MATHML.pfx;csch" >
<!ENTITY % csymbol.qname        "%MATHML.pfx;csymbol" >
<!ENTITY % curl.qname           "%MATHML.pfx;curl" >
<!ENTITY % declare.qname        "%MATHML.pfx;declare" >
<!ENTITY % degree.qname         "%MATHML.pfx;degree" >
<!ENTITY % determinant.qname    "%MATHML.pfx;determinant" >
<!ENTITY % diff.qname           "%MATHML.pfx;diff" >
<!ENTITY % divergence.qname     "%MATHML.pfx;divergence" >
<!ENTITY % divide.qname         "%MATHML.pfx;divide" >
<!ENTITY % domain.qname         "%MATHML.pfx;domain" >
<!ENTITY % domainofapplication.qname "%MATHML.pfx;domainofapplication" >
<!ENTITY % emptyset.qname       "%MATHML.pfx;emptyset" >
<!ENTITY % eq.qname             "%MATHML.pfx;eq" >
<!ENTITY % equivalent.qname     "%MATHML.pfx;equivalent" >
<!ENTITY % eulergamma.qname     "%MATHML.pfx;eulergamma" >
<!ENTITY % exists.qname         "%MATHML.pfx;exists" >
<!ENTITY % exp.qname            "%MATHML.pfx;exp" >
<!ENTITY % exponentiale.qname   "%MATHML.pfx;exponentiale" >
<!ENTITY % factorial.qname      "%MATHML.pfx;factorial" >
<!ENTITY % factorof.qname       "%MATHML.pfx;factorof" >
<!ENTITY % false.qname          "%MATHML.pfx;false" >
<!ENTITY % floor.qname          "%MATHML.pfx;floor" >
<!ENTITY % fn.qname             "%MATHML.pfx;fn" >
<!ENTITY % forall.qname         "%MATHML.pfx;forall" >
<!ENTITY % gcd.qname            "%MATHML.pfx;gcd" >
<!ENTITY % geq.qname            "%MATHML.pfx;geq" >
<!ENTITY % grad.qname           "%MATHML.pfx;grad" >
<!ENTITY % gt.qname             "%MATHML.pfx;gt" >
<!ENTITY % ident.qname          "%MATHML.pfx;ident" >
<!ENTITY % image.qname          "%MATHML.pfx;image" >
<!ENTITY % imaginary.qname      "%MATHML.pfx;imaginary" >
<!ENTITY % imaginaryi.qname     "%MATHML.pfx;imaginaryi" >
<!ENTITY % implies.qname        "%MATHML.pfx;implies" >
<!ENTITY % in.qname             "%MATHML.pfx;in" >
<!ENTITY % infinity.qname       "%MATHML.pfx;infinity" >
<!ENTITY % int.qname            "%MATHML.pfx;int" >
<!ENTITY % integers.qname       "%MATHML.pfx;integers" >
<!ENTITY % intersect.qname      "%MATHML.pfx;intersect" >
<!ENTITY % interval.qname       "%MATHML.pfx;interval" >
<!ENTITY % inverse.qname        "%MATHML.pfx;inverse" >
<!ENTITY % lambda.qname         "%MATHML.pfx;lambda" >
<!ENTITY % laplacian.qname      "%MATHML.pfx;laplacian" >
<!ENTITY % lcm.qname            "%MATHML.pfx;lcm" >
<!ENTITY % leq.qname            "%MATHML.pfx;leq" >
<!ENTITY % limit.qname          "%MATHML.pfx;limit" >
<!ENTITY % list.qname           "%MATHML.pfx;list" >
<!ENTITY % ln.qname             "%MATHML.pfx;ln" >
<!ENTITY % log.qname            "%MATHML.pfx;log" >
<!ENTITY % logbase.qname        "%MATHML.pfx;logbase" >
<!ENTITY % lowlimit.qname       "%MATHML.pfx;lowlimit" >
<!ENTITY % lt.qname             "%MATHML.pfx;lt" >
<!ENTITY % maction.qname        "%MATHML.pfx;maction" >
<!ENTITY % maligngroup.qname    "%MATHML.pfx;maligngroup" >
<!ENTITY % malignmark.qname     "%MATHML.pfx;malignmark" >
<!ENTITY % math.qname           "%MATHML.pfx;math" >
<!ENTITY % matrix.qname         "%MATHML.pfx;matrix" >
<!ENTITY % matrixrow.qname      "%MATHML.pfx;matrixrow" >
<!ENTITY % max.qname            "%MATHML.pfx;max" >
<!ENTITY % mean.qname           "%MATHML.pfx;mean" >
<!ENTITY % median.qname         "%MATHML.pfx;median" >
<!ENTITY % menclose.qname       "%MATHML.pfx;menclose" >
<!ENTITY % merror.qname         "%MATHML.pfx;merror" >
<!ENTITY % mfenced.qname        "%MATHML.pfx;mfenced" >
<!ENTITY % mfrac.qname          "%MATHML.pfx;mfrac" >
<!ENTITY % mglyph.qname         "%MATHML.pfx;mglyph" >
<!ENTITY % mi.qname             "%MATHML.pfx;mi" >
<!ENTITY % min.qname            "%MATHML.pfx;min" >
<!ENTITY % minus.qname          "%MATHML.pfx;minus" >
<!ENTITY % mlabeledtr.qname     "%MATHML.pfx;mlabeledtr" >
<!ENTITY % mmultiscripts.qname  "%MATHML.pfx;mmultiscripts" >
<!ENTITY % mn.qname             "%MATHML.pfx;mn" >
<!ENTITY % mo.qname             "%MATHML.pfx;mo" >
<!ENTITY % mode.qname           "%MATHML.pfx;mode" >
<!ENTITY % moment.qname         "%MATHML.pfx;moment" >
<!ENTITY % momentabout.qname    "%MATHML.pfx;momentabout" >
<!ENTITY % mover.qname          "%MATHML.pfx;mover" >
<!ENTITY % mpadded.qname        "%MATHML.pfx;mpadded" >
<!ENTITY % mphantom.qname       "%MATHML.pfx;mphantom" >
<!ENTITY % mprescripts.qname    "%MATHML.pfx;mprescripts" >
<!ENTITY % mroot.qname          "%MATHML.pfx;mroot" >
<!ENTITY % mrow.qname           "%MATHML.pfx;mrow" >
<!ENTITY % ms.qname             "%MATHML.pfx;ms" >
<!ENTITY % mspace.qname         "%MATHML.pfx;mspace" >
<!ENTITY % msqrt.qname          "%MATHML.pfx;msqrt" >
<!ENTITY % mstyle.qname         "%MATHML.pfx;mstyle" >
<!ENTITY % msub.qname           "%MATHML.pfx;msub" >
<!ENTITY % msubsup.qname        "%MATHML.pfx;msubsup" >
<!ENTITY % msup.qname           "%MATHML.pfx;msup" >
<!ENTITY % mtable.qname         "%MATHML.pfx;mtable" >
<!ENTITY % mtd.qname            "%MATHML.pfx;mtd" >
<!ENTITY % mtext.qname          "%MATHML.pfx;mtext" >
<!ENTITY % mtr.qname            "%MATHML.pfx;mtr" >
<!ENTITY % munder.qname         "%MATHML.pfx;munder" >
<!ENTITY % munderover.qname     "%MATHML.pfx;munderover" >
<!ENTITY % naturalnumbers.qname "%MATHML.pfx;naturalnumbers" >
<!ENTITY % neq.qname            "%MATHML.pfx;neq" >
<!ENTITY % none.qname           "%MATHML.pfx;none" >
<!ENTITY % not.qname            "%MATHML.pfx;not" >
<!ENTITY % notanumber.qname     "%MATHML.pfx;notanumber" >
<!ENTITY % notin.qname          "%MATHML.pfx;notin" >
<!ENTITY % notprsubset.qname    "%MATHML.pfx;notprsubset" >
<!ENTITY % notsubset.qname      "%MATHML.pfx;notsubset" >
<!ENTITY % or.qname             "%MATHML.pfx;or" >
<!ENTITY % otherwise.qname      "%MATHML.pfx;otherwise" >
<!ENTITY % outerproduct.qname   "%MATHML.pfx;outerproduct" >
<!ENTITY % partialdiff.qname    "%MATHML.pfx;partialdiff" >
<!ENTITY % pi.qname             "%MATHML.pfx;pi" >
<!ENTITY % piece.qname          "%MATHML.pfx;piece" >
<!ENTITY % piecewise.qname      "%MATHML.pfx;piecewise" >
<!ENTITY % plus.qname           "%MATHML.pfx;plus" >
<!ENTITY % power.qname          "%MATHML.pfx;power" >
<!ENTITY % primes.qname         "%MATHML.pfx;primes" >
<!ENTITY % product.qname        "%MATHML.pfx;product" >
<!ENTITY % prsubset.qname       "%MATHML.pfx;prsubset" >
<!ENTITY % quotient.qname       "%MATHML.pfx;quotient" >
<!ENTITY % rationals.qname      "%MATHML.pfx;rationals" >
<!ENTITY % real.qname           "%MATHML.pfx;real" >
<!ENTITY % reals.qname          "%MATHML.pfx;reals" >
<!ENTITY % reln.qname           "%MATHML.pfx;reln" >
<!ENTITY % rem.qname            "%MATHML.pfx;rem" >
<!ENTITY % root.qname           "%MATHML.pfx;root" >
<!ENTITY % scalarproduct.qname  "%MATHML.pfx;scalarproduct" >
<!ENTITY % sdev.qname           "%MATHML.pfx;sdev" >
<!ENTITY % sec.qname            "%MATHML.pfx;sec" >
<!ENTITY % sech.qname           "%MATHML.pfx;sech" >
<!ENTITY % selector.qname       "%MATHML.pfx;selector" >
<!ENTITY % semantics.qname      "%MATHML.pfx;semantics" >
<!ENTITY % sep.qname            "%MATHML.pfx;sep" >
<!ENTITY % set.qname            "%MATHML.pfx;set" >
<!ENTITY % setdiff.qname        "%MATHML.pfx;setdiff" >
<!ENTITY % sin.qname            "%MATHML.pfx;sin" >
<!ENTITY % sinh.qname           "%MATHML.pfx;sinh" >
<!ENTITY % subset.qname         "%MATHML.pfx;subset" >
<!ENTITY % sum.qname            "%MATHML.pfx;sum" >
<!ENTITY % tan.qname            "%MATHML.pfx;tan" >
<!ENTITY % tanh.qname           "%MATHML.pfx;tanh" >
<!ENTITY % tendsto.qname        "%MATHML.pfx;tendsto" >
<!ENTITY % times.qname          "%MATHML.pfx;times" >
<!ENTITY % transpose.qname      "%MATHML.pfx;transpose" >
<!ENTITY % true.qname           "%MATHML.pfx;true" >
<!ENTITY % union.qname          "%MATHML.pfx;union" >
<!ENTITY % uplimit.qname        "%MATHML.pfx;uplimit" >
<!ENTITY % variance.qname       "%MATHML.pfx;variance" >
<!ENTITY % vector.qname         "%MATHML.pfx;vector" >
<!ENTITY % vectorproduct.qname  "%MATHML.pfx;vectorproduct" >
<!ENTITY % xor.qname            "%MATHML.pfx;xor" >

<!-- end of template-qname-1.mod -->



<!-- Entity used to enable marked sections which enforces stricter		
     checking of MathML syntax rules		
-->
<!ENTITY % MathMLstrict "IGNORE">		


<!-- Presentation element set  ................................... -->

<!-- Presentation schemata with content -->

<!ENTITY % ptoken                   
     "%mi.qname; | %mn.qname; | %mo.qname;
      | %mtext.qname; | %ms.qname;" >

 

 

 

 

 

<!-- Empty presentation schemata -->

<!ENTITY % petoken                  
     "%mspace.qname;" >
<!ELEMENT %mspace.qname;  EMPTY >

 

<!-- Presentation: general layout schemata -->

<!ENTITY % pgenschema               
     "%mrow.qname; | %mfrac.qname; | %msqrt.qname; | %mroot.qname; 
      | %menclose.qname; | %mstyle.qname; | %merror.qname; 
      | %mpadded.qname; | %mphantom.qname; | %mfenced.qname;" >

 

 

 

 

 

 

 

 

 

 

<!-- Presentation layout schemata: scripts and limits -->

<!ENTITY % pscrschema               
     "%msub.qname; | %msup.qname; | %msubsup.qname; | %munder.qname; 
      | %mover.qname; | %munderover.qname; | %mmultiscripts.qname;" >

 

 

 

 

 

 

 

<!-- Presentation layout schemata: empty elements for scripts -->

<!ENTITY % pscreschema              
     "%mprescripts.qname; | %none.qname;" >

<!ELEMENT %mprescripts.qname;  EMPTY >
 

<!ELEMENT %none.qname;  EMPTY >
 

<!-- Presentation layout schemata: tables -->

<![%MathMLstrict;[
<!-- in strict mode only allow mtable at top level.
     mtr ,mlabledtr and mtd only allowed inside mtable.
-->
  <!ENTITY % ptabschema    "%mtable.qname;" >
]]>

<!ENTITY % ptabschema               
     "%mtable.qname; | %mtr.qname; | %mlabeledtr.qname; | %mtd.qname;" >

 

 

 

 
<!ENTITY % plschema                 
     "%pgenschema; | %pscrschema; | %ptabschema;" >

<!-- Empty presentation layout schemata -->

<!ENTITY % peschema                 
     "%maligngroup.qname; | %malignmark.qname;" >

<!ELEMENT %malignmark.qname;  EMPTY >

 

<!ELEMENT %maligngroup.qname;  EMPTY >
 


<!ELEMENT %mglyph.qname;  EMPTY >
 

<!-- Presentation action schemata -->

<!ENTITY % pactions                 
     "%maction.qname;" >
 

<!-- The following entity for substitution into
     content constructs excludes elements that
     are not valid as expressions.
-->

<!ENTITY % PresInCont               
     "%ptoken; | %petoken; |
      %plschema; | %peschema; | %pactions;" >

<!-- Presentation entity: all presentation constructs -->


<![%MathMLstrict;[
<!-- In strict mode don't allow prescripts and none at top level.-->
  <!ENTITY % Presentation "%PresInCont;">             
]]>
<!ENTITY % Presentation             
     "%ptoken; | %petoken; | %pscreschema; |
      %plschema; | %peschema; | %pactions;">

<!-- Content element set  ........................................ -->

<!-- Attribute definitions -->

<!ENTITY % att-base                 
     "base         CDATA                    '10'" >
<!ENTITY % att-closure              
     "closure      CDATA                    'closed'" >
<!ENTITY % att-definition           
     "definitionURL CDATA                   ''" >
<!ENTITY % att-encoding             
     "encoding     CDATA                    ''" >
<!ENTITY % att-nargs             
     "nargs        CDATA                    '1'" >
<!ENTITY % att-occurrence           
     "occurrence   CDATA                    'function-model'" >
<!ENTITY % att-order   
     "order        CDATA                    'numeric'" >
<!ENTITY % att-scope                
     "scope        CDATA                    'local'" >
<!ENTITY % att-type                 
     "type         CDATA                    #IMPLIED" >

<!-- Content elements: leaf nodes -->

<!ENTITY % ctoken               
     "%csymbol.qname; | %ci.qname; | %cn.qname;" >

 

 

 

<!-- Content elements: specials -->

<!ENTITY % cspecial                 
     "%apply.qname; | %reln.qname; |
      %lambda.qname;" >

 

 

 

<!-- Content elements: others -->

<!ENTITY % cother                   
     "%condition.qname; | %declare.qname; | %sep.qname;" >

 

 

<!ELEMENT %sep.qname;  EMPTY >
 

<!-- Content elements: semantic mapping -->

<![%MathMLstrict;[
<!-- in strict mode only allow semantics at top level.
     annotation and annotation-xml only allowed in semantics
-->
  <!ENTITY % csemantics  "%semantics.qname;" >
]]>
<!ENTITY % csemantics               
     "%semantics.qname; | %annotation.qname; |
      %annotation-xml.qname;" >

 

 

 

<!-- Content elements: constructors -->

<!ENTITY % cconstructor             
     "%interval.qname; | %list.qname; | %matrix.qname; 
      | %matrixrow.qname; | %set.qname; | %vector.qname;
      | %piecewise.qname; " >

 

 

 

 

 

 

 

 

 


<!-- Content elements: symbols -->

<!ENTITY % c0ary              
    "%integers.qname; |
     %reals.qname; |
     %rationals.qname; |
     %naturalnumbers.qname; |
     %complexes.qname; |
     %primes.qname; |
     %exponentiale.qname; |
     %imaginaryi.qname; |
     %notanumber.qname; |
     %true.qname; |
     %false.qname; |
     %emptyset.qname; |
     %pi.qname; |
     %eulergamma.qname; |
     %infinity.qname;" >

<!ELEMENT %integers.qname;  EMPTY >
 

<!ELEMENT %reals.qname;  EMPTY >
 

<!ELEMENT %rationals.qname;  EMPTY >
 

<!ELEMENT %naturalnumbers.qname;  EMPTY >
 

<!ELEMENT %complexes.qname;  EMPTY >
 

<!ELEMENT %primes.qname;  EMPTY >
 

<!ELEMENT %exponentiale.qname;  EMPTY >
 

<!ELEMENT %imaginaryi.qname;  EMPTY >
 

<!ELEMENT %notanumber.qname;  EMPTY >
 

<!ELEMENT %true.qname;  EMPTY >
 

<!ELEMENT %false.qname;  EMPTY >
 

<!ELEMENT %emptyset.qname;  EMPTY >
 

<!ELEMENT %pi.qname;  EMPTY >
 

<!ELEMENT %eulergamma.qname;  EMPTY >
 

<!ELEMENT %infinity.qname;  EMPTY >
 

<!-- Content elements: operators -->

<!ENTITY % cfuncop1ary              
     "%inverse.qname; | %ident.qname;|
      %domain.qname; |  %codomain.qname; | 
      %image.qname;  " >

<!ELEMENT %inverse.qname;  EMPTY >
 

<!ELEMENT %domain.qname;  EMPTY >
 

<!ELEMENT %codomain.qname;  EMPTY >
 

<!ELEMENT %image.qname;  EMPTY >
 



<!ENTITY % cfuncopnary              
     "%fn.qname; | %compose.qname;" >

 

<!ELEMENT %ident.qname;  EMPTY >
 

<!ELEMENT %compose.qname;  EMPTY >
 

<!ENTITY % carithop1ary             
     "%abs.qname; | %conjugate.qname; | %exp.qname; | %factorial.qname; |
      %arg.qname; | %real.qname; | %imaginary.qname; |
      %floor.qname; | %ceiling.qname;" >

<!ELEMENT %exp.qname;  EMPTY >
 

<!ELEMENT %abs.qname;  EMPTY >
 

<!ELEMENT %arg.qname;  EMPTY >
 

<!ELEMENT %real.qname;  EMPTY >
 

<!ELEMENT %imaginary.qname;  EMPTY >
 

<!ELEMENT %conjugate.qname;  EMPTY >
 

<!ELEMENT %factorial.qname;  EMPTY >
 


<!ELEMENT %floor.qname;  EMPTY >
 

<!ELEMENT %ceiling.qname;  EMPTY >
 
<!ENTITY % carithop1or2ary          
     "%minus.qname;" >

<!ELEMENT %minus.qname;  EMPTY >
 

<!ENTITY % carithop2ary             
     "%quotient.qname; | %divide.qname; | %power.qname; | %rem.qname;" >

<!ELEMENT %quotient.qname;  EMPTY >
 

<!ELEMENT %divide.qname;  EMPTY >
 

<!ELEMENT %power.qname;  EMPTY >
 

<!ELEMENT %rem.qname;  EMPTY >
 

<!ENTITY % carithopnary             
     "%plus.qname; | %times.qname; | %max.qname; 
      | %min.qname; | %gcd.qname; | %lcm.qname;" >

<!ELEMENT %plus.qname;  EMPTY >
 

<!ELEMENT %max.qname;  EMPTY >
 

<!ELEMENT %min.qname;  EMPTY >
 

<!ELEMENT %times.qname;  EMPTY >
 

<!ELEMENT %gcd.qname;  EMPTY >
 

<!ELEMENT %lcm.qname;  EMPTY >
 

<!ENTITY % carithoproot             
     "%root.qname;" >

<!ELEMENT %root.qname;  EMPTY >
 

<!ENTITY % clogicopquant            
     "%exists.qname; | %forall.qname;" >

<!ELEMENT %exists.qname;  EMPTY >
 

<!ELEMENT %forall.qname;  EMPTY >
 

<!ENTITY % clogicopnary             
     "%and.qname; | %or.qname; | %xor.qname;" >

<!ELEMENT %and.qname;  EMPTY >
 

<!ELEMENT %or.qname;  EMPTY >
 

<!ELEMENT %xor.qname;  EMPTY >
 

<!ENTITY % clogicop1ary             
     "%not.qname;" >

<!ELEMENT %not.qname;  EMPTY >
 

<!ENTITY % clogicop2ary             
     "%implies.qname;" >

<!ELEMENT %implies.qname;  EMPTY >
 

<!ENTITY % ccalcop                  
     "%log.qname; | %int.qname; | %diff.qname; | %partialdiff.qname; |
      %divergence.qname; | %grad.qname; | %curl.qname; | %laplacian.qname;" >

<!ELEMENT %divergence.qname;  EMPTY >
 

<!ELEMENT %grad.qname;  EMPTY >
 

<!ELEMENT %curl.qname;  EMPTY >
 

<!ELEMENT %laplacian.qname;  EMPTY >
 

<!ELEMENT %log.qname;  EMPTY >
 

<!ELEMENT %int.qname;  EMPTY >
 

<!ELEMENT %diff.qname;  EMPTY >
 

<!ELEMENT %partialdiff.qname;  EMPTY >
 

<!ENTITY % ccalcop1ary              
     "%ln.qname;" >

<!ELEMENT %ln.qname;  EMPTY >
 

<!ENTITY % csetop1ary               
     "%card.qname;" >

<!ELEMENT %card.qname;  EMPTY >
 

<!ENTITY % csetop2ary               
     "%setdiff.qname;" >

<!ELEMENT %setdiff.qname;  EMPTY >
 

<!ENTITY % csetopnary               
     "%union.qname; | %intersect.qname; | %cartesianproduct.qname; " >

<!ELEMENT %union.qname;  EMPTY >
 

<!ELEMENT %intersect.qname;  EMPTY >
 

<!ELEMENT %cartesianproduct.qname;  EMPTY >
 

<!ENTITY % cseqop                   
     "%sum.qname; | %product.qname; | %limit.qname;" >

<!ELEMENT %sum.qname;  EMPTY >
 

<!ELEMENT %product.qname;  EMPTY >
 

<!ELEMENT %limit.qname;  EMPTY >
 

<!ENTITY % ctrigop                  
     "%sin.qname; | %cos.qname; | %tan.qname; 
      | %sec.qname; | %csc.qname; | %cot.qname; 
      | %sinh.qname; | %cosh.qname; | %tanh.qname; 
      | %sech.qname; | %csch.qname; | %coth.qname; 
      | %arcsin.qname; | %arccos.qname; | %arctan.qname;
      | %arccosh.qname; | %arccot.qname; | %arccoth.qname;
      | %arccsc.qname; | %arccsch.qname; | %arcsec.qname;
      | %arcsech.qname; | %arcsinh.qname; | %arctanh.qname;
      " >

<!ELEMENT %sin.qname;  EMPTY >
 

<!ELEMENT %cos.qname;  EMPTY >
 

<!ELEMENT %tan.qname;  EMPTY >
 

<!ELEMENT %sec.qname;  EMPTY >
 

<!ELEMENT %csc.qname;  EMPTY >
 

<!ELEMENT %cot.qname;  EMPTY >
 

<!ELEMENT %sinh.qname;  EMPTY >
 

<!ELEMENT %cosh.qname;  EMPTY >
 

<!ELEMENT %tanh.qname;  EMPTY >
 

<!ELEMENT %sech.qname;  EMPTY >
 

<!ELEMENT %csch.qname;  EMPTY >
 

<!ELEMENT %coth.qname;  EMPTY >
 

<!ELEMENT %arcsin.qname;  EMPTY >
 

<!ELEMENT %arccos.qname;  EMPTY >
 

<!ELEMENT %arctan.qname;  EMPTY >
 

<!ELEMENT %arccosh.qname;  EMPTY >
 


<!ELEMENT %arccot.qname;  EMPTY >
 

<!ELEMENT %arccoth.qname;  EMPTY >
 


<!ELEMENT %arccsc.qname;  EMPTY >
 

<!ELEMENT %arccsch.qname;  EMPTY >
 

<!ELEMENT %arcsec.qname;  EMPTY >
 

<!ELEMENT %arcsech.qname;  EMPTY >
 

<!ELEMENT %arcsinh.qname;  EMPTY >
 

<!ELEMENT %arctanh.qname;  EMPTY >
 



<!ENTITY % cstatopnary              
     "%mean.qname; | %sdev.qname; |
      %variance.qname; | %median.qname; |
      %mode.qname;" >

<!ELEMENT %mean.qname;  EMPTY >
 

<!ELEMENT %sdev.qname;  EMPTY >
 

<!ELEMENT %variance.qname;  EMPTY >
 

<!ELEMENT %median.qname;  EMPTY >
 

<!ELEMENT %mode.qname;  EMPTY >
 

<!ENTITY % cstatopmoment            
     "%moment.qname;" >

<!ELEMENT %moment.qname;  EMPTY >
 

<!ENTITY % clalgop1ary              
     "%determinant.qname; |
      %transpose.qname;" >

<!ELEMENT %determinant.qname;  EMPTY >
 

<!ELEMENT %transpose.qname;  EMPTY >
 

<!ENTITY % clalgop2ary              
     "%vectorproduct.qname; 
      | %scalarproduct.qname; 
      | %outerproduct.qname;" >

<!ELEMENT %vectorproduct.qname;  EMPTY >
 

<!ELEMENT %scalarproduct.qname;  EMPTY >
 

<!ELEMENT %outerproduct.qname;  EMPTY >
 

<!ENTITY % clalgopnary              
     "%selector.qname;" >

<!ELEMENT %selector.qname;  EMPTY >
 

<!-- Content elements: relations -->

<!ENTITY % cgenrel2ary             
     "%neq.qname; | %factorof.qname;" >

<!ELEMENT %neq.qname;  EMPTY >
 

<!ELEMENT %factorof.qname;  EMPTY >
 

<!ENTITY % cgenrelnary              
     "%eq.qname; | %leq.qname; | %lt.qname; | %geq.qname; 
      | %gt.qname;| %equivalent.qname; | %approx.qname;" >

<!ELEMENT %eq.qname;  EMPTY >
 

<!ELEMENT %equivalent.qname;  EMPTY >
 

<!ELEMENT %approx.qname;  EMPTY >
 

<!ELEMENT %gt.qname;  EMPTY >
 

<!ELEMENT %lt.qname;  EMPTY >
 

<!ELEMENT %geq.qname;  EMPTY >
 

<!ELEMENT %leq.qname;  EMPTY >
 

<!ENTITY % csetrel2ary              
     "%in.qname; | %notin.qname; | %notsubset.qname; | %notprsubset.qname;" >

<!ELEMENT %in.qname;  EMPTY >
 

<!ELEMENT %notin.qname;  EMPTY >
 

<!ELEMENT %notsubset.qname;  EMPTY >
 

<!ELEMENT %notprsubset.qname;  EMPTY >
 

<!ENTITY % csetrelnary       
     "%subset.qname; | %prsubset.qname;" >

<!ELEMENT %subset.qname;  EMPTY >
 

<!ELEMENT %prsubset.qname;  EMPTY >
 

<!ENTITY % cseqrel2ary              
     "%tendsto.qname;" >

<!ELEMENT %tendsto.qname;  EMPTY >
 

<!-- Content elements: quantifiers -->

<!ENTITY % cquantifier            
     "%lowlimit.qname; | %uplimit.qname; | %bvar.qname; 
      | %degree.qname; | %logbase.qname;
      | %momentabout.qname; | %domainofapplication.qname; " >

 

 

 

 

 

 

 

<!-- Operator groups -->

<!ENTITY % cop1ary                  
     "%cfuncop1ary; | %carithop1ary; | %clogicop1ary; |
      %ccalcop1ary; | %ctrigop; | %clalgop1ary; |
      %csetop1ary;" >

<!ENTITY % cop2ary                  
     "%carithop2ary; | %clogicop2ary;| %clalgop2ary; | %csetop2ary;" >

<!ENTITY % copnary                  
     "%cfuncopnary; | %carithopnary; | %clogicopnary; |
      %csetopnary; | %cstatopnary; | %clalgopnary;" >

<!ENTITY % copmisc                  
     "%carithoproot; | %carithop1or2ary; | %ccalcop; |
      %cseqop; | %cstatopmoment; | %clogicopquant;" >

<!-- Relation groups -->

<!ENTITY % crel2ary                 
     "%cgenrel2ary; | %csetrel2ary; | %cseqrel2ary;" >

<!ENTITY % crelnary                 
     "%cgenrelnary; | %csetrelnary;" >

<!-- Content constructs: all -->

<!ENTITY % Content                  
     "%ctoken; | %cspecial; | %cother; | %csemantics; | %c0ary;
      | %cconstructor; | %cquantifier; | %cop1ary; | %cop2ary; 
      | %copnary; |%copmisc; | %crel2ary; | %crelnary;" >

<!-- Content constructs for substitution in presentation structures -->

<!ENTITY % ContInPres               
     "%ci.qname; |%csymbol.qname;| %cn.qname; | %c0ary; |
      %apply.qname; | %fn.qname; |
      %lambda.qname; | %reln.qname; |
      %cconstructor; |
      %semantics.qname; |%declare.qname;" >

<!-- ............................................................. -->
<!-- Recursive definition for content of expressions. Include
     presentation constructs at lowest level so presentation
     layout schemata hold presentation or content elements.
     Include content constructs at lowest level so content
     elements hold PCDATA or presentation elements at leaf
     level (for permitted substitutable elements in context)
-->
<![%MathMLstrict;[
<!-- in strict mode don't allow presentation in content
     except where allowed by chapter 5:
     ci, cn, csymbol, semantics
-->
  <!ENTITY % ContentExpression  "(%Content;)*" >
  <!ENTITY % semanticsContentExpression        
       "(%Content; | %PresInCont; |
         %annotation.qname; | %annotation-xml.qname;)*" >
]]>
<!ENTITY % ContentExpression        
     "(%Content; | %PresInCont;)*" >
<!ENTITY % semanticsContentExpression    "%ContentExpression;">    


<!ENTITY % PresExpression      
     "(%Presentation; | %ContInPres;)*" >
<!ENTITY % MathExpression           
     "(%PresInCont; | %ContInPres;)*" >

<!-- PCDATA or MathML character elements -->
<!ENTITY % MathMLCharacters         
     "#PCDATA | %mglyph.qname; " >

<!-- Content elements: tokens                       -->
<!-- (may contain embedded presentation constructs) -->

<!ELEMENT %ci.qname;                 (%MathMLCharacters; | %PresInCont;)* >
<!ELEMENT %csymbol.qname;            (%MathMLCharacters; | %PresInCont;)* >
<!ELEMENT %cn.qname;                 (%MathMLCharacters; | %sep.qname; | %PresInCont;)* >

<!-- Content elements: special -->

<!ELEMENT %apply.qname;              (%ContentExpression;) >
<!ELEMENT %reln.qname;               (%ContentExpression;) >
<!ELEMENT %lambda.qname;             (%ContentExpression;) >

<!-- Content elements: other -->

<!ELEMENT %condition.qname;          (%ContentExpression;) >
<!ELEMENT %declare.qname;            (%ContentExpression;) >

<!-- Content elements: semantics -->

<!ELEMENT %semantics.qname;          (%semanticsContentExpression;) >
<!ENTITY % Annotation.content  "( #PCDATA )" >
<!ELEMENT %annotation.qname;         %Annotation.content; >

<!ENTITY % Annotation-xml.content "ANY" >
<!ELEMENT %annotation-xml.qname;     %Annotation-xml.content; >

<!-- Content elements: constructors -->

<!ELEMENT %interval.qname;           (%ContentExpression;) >
<!ELEMENT %set.qname;                (%ContentExpression;) >
<!ELEMENT %list.qname;               (%ContentExpression;) >
<!ELEMENT %vector.qname;             (%ContentExpression;) >
<!ELEMENT %matrix.qname;             (%ContentExpression;) >
<!ELEMENT %matrixrow.qname;          (%ContentExpression;) >

<!ELEMENT %piecewise.qname;          ((%piece.qname;)*, (%otherwise.qname;)? ) >
<!ELEMENT %piece.qname;              (%ContentExpression;) >
<!ELEMENT %otherwise.qname;          (%ContentExpression;) >

<!-- Content elements: operator (user-defined) -->

<!ELEMENT %fn.qname;                 (%ContentExpression;) >

<!-- Content elements: quantifiers -->

<!ELEMENT %lowlimit.qname;           (%ContentExpression;) >
<!ELEMENT %uplimit.qname;            (%ContentExpression;) >
<!ELEMENT %bvar.qname;               (%ContentExpression;) >
<!ELEMENT %degree.qname;             (%ContentExpression;) >
<!ELEMENT %logbase.qname;            (%ContentExpression;) >
<!ELEMENT %momentabout.qname;        (%ContentExpression;) >
<!ELEMENT %domainofapplication.qname; (%ContentExpression;) >

<!-- ............................................................. -->
<!-- Presentation layout schemata contain tokens,
     layout and content schemata.
-->



<![%MathMLstrict;[
<!-- In strict mode enforce mfrac has exactly two children
      same for msub etc -->
  <!ENTITY % onePresExpression
       "(%Presentation; | %ContInPres;)" >
  <!ENTITY % twoPresExpression
       "(%onePresExpression;,%onePresExpression;)" >
  <!ENTITY % threePresExpression
       "(%onePresExpression;,%onePresExpression;,%onePresExpression;)" >
  <!ENTITY % mtrPresExpression
       "(%mtr.qname;|%mlabeledtr.qname;)*" >
  <!ENTITY % mtdPresExpression
       "(%mtd.qname;)*" >
  <!ENTITY % prscrPresExpression " (%onePresExpression;,
  ((%onePresExpression;|%none.qname;),(%onePresExpression;|%none.qname;))*,
  (%mprescripts.qname;,
  ((%onePresExpression;|%none.qname;),(%onePresExpression;|%none.qname;))*)?
  )">
]]>


<!-- By default keep them as they were in MathML 2.0  -->
<!ENTITY % onePresExpression   "%PresExpression;">
<!ENTITY % twoPresExpression   "%PresExpression;">
<!ENTITY % threePresExpression "%PresExpression;">
<!ENTITY % mtrPresExpression   "%PresExpression;">
<!ENTITY % mtdPresExpression   "%PresExpression;">
<!ENTITY % prscrPresExpression "%PresExpression;">

<!ELEMENT %mstyle.qname;             (%PresExpression;) >
<!ELEMENT %merror.qname;             (%PresExpression;) >
<!ELEMENT %mphantom.qname;           (%PresExpression;) >
<!ELEMENT %mrow.qname;               (%PresExpression;) >
<!ELEMENT %mfrac.qname;              (%twoPresExpression;) >
<!ELEMENT %msqrt.qname;              (%PresExpression;) >
<!ELEMENT %menclose.qname;           (%PresExpression;) >
<!ELEMENT %mroot.qname;              (%twoPresExpression;) >
<!ELEMENT %msub.qname;               (%twoPresExpression;) >
<!ELEMENT %msup.qname;               (%twoPresExpression;) >
<!ELEMENT %msubsup.qname;            (%threePresExpression;) >
<!ELEMENT %mmultiscripts.qname;      (%prscrPresExpression;) >
<!ELEMENT %munder.qname;             (%twoPresExpression;) >
<!ELEMENT %mover.qname;              (%twoPresExpression;) >
<!ELEMENT %munderover.qname;         (%threePresExpression;) >
<!ELEMENT %mtable.qname;             (%mtrPresExpression;) >
<!ELEMENT %mtr.qname;                (%mtdPresExpression;) >
<!ELEMENT %mlabeledtr.qname;         (%mtdPresExpression;) >
<!ELEMENT %mtd.qname;                (%PresExpression;) >
<!ELEMENT %maction.qname;            (%PresExpression;) >
<!ELEMENT %mfenced.qname;            (%PresExpression;) >
<!ELEMENT %mpadded.qname;            (%PresExpression;) >

<!-- Presentation elements contain PCDATA or malignmark constructs. -->

<!ELEMENT %mi.qname;                 (%MathMLCharacters; |
      %malignmark.qname;)* >
<!ELEMENT %mn.qname;                 (%MathMLCharacters; |
      %malignmark.qname;)* >
<!ELEMENT %mo.qname;                 (%MathMLCharacters; |
      %malignmark.qname;)* >
<!ELEMENT %mtext.qname;              (%MathMLCharacters; |
      %malignmark.qname;)* >
<!ELEMENT %ms.qname;                 (%MathMLCharacters; |
      %malignmark.qname;)* >
<!-- ............................................................. -->
<!-- The top-level element "math" contains MathML encoded
     mathematics. The "math" element has the browser info
     attributes iff it is also the browser interface element.
-->

<!ELEMENT %math.qname;               (%MathExpression;) >

 

